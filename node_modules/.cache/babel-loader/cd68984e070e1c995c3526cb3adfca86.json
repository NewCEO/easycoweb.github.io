{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport DashBoardLayOut from '../../layouts/AdminDashboardLayout';\nimport CreateFarmForm from '../../components/createFarm';\nimport isAdmin from '../../middlewares/isAdmin';\nimport $ from 'jquery';\nimport httpHelper from \"../../helpers/httpHelper\";\nimport HelpBlock from \"../../components/loginForm\";\nimport FormHelpText from \"../../components/signupForm\";\nimport Router from \"next/dist/client/router\";\n\nvar createFarm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(createFarm, _React$Component);\n\n  function createFarm() {\n    _classCallCheck(this, createFarm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(createFarm).apply(this, arguments));\n  }\n\n  _createClass(createFarm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      isAdmin();\n      this.state = {\n        name: '',\n        redirect: false,\n        emailHelpText: {\n          state: false,\n          error: false,\n          text: ''\n        },\n        nameHelpText: {\n          state: false,\n          error: false,\n          text: ''\n        }\n      };\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n\n      switch (target.name) {\n        case 'name':\n          this.validateName(target.value);\n          break;\n\n        case 'email':\n          this.validateEmail(target.value);\n          break;\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this = this;\n\n      e.preventDefault();\n      this.setState({\n        loginHelpBlock: {\n          state: false,\n          error: false,\n          text: ''\n        }\n      });\n      var formData = new FormData();\n      formData.append('name', this.state.name);\n      formData.append('email', this.state.email);\n      formData.append('permission', this.state.permission);\n      HttpHelper.httpReq('http://localhost:3009/api/v1/user/admin/create', formData, 'POST').then(function (response) {\n        if (response.success) {\n          _this.setState({\n            helpBlock: {\n              state: true,\n              error: false,\n              text: 'user created successfully'\n            }\n          });\n        } else {\n          _this.setState({\n            helpBlock: {\n              state: true,\n              error: true,\n              text: 'error creating user'\n            }\n          });\n        }\n      }).catch(function (error) {\n        _this.setState({\n          helpBlock: {\n            state: true,\n            error: true,\n            text: 'error creating user'\n          }\n        });\n      });\n    }\n  }, {\n    key: \"validateEmail\",\n    value: function validateEmail(email) {\n      var _this2 = this;\n\n      if (email !== 'undefined') {\n        return new _Promise(function (resolve, reject) {\n          HttpHelper.httpReq('http://localhost:3009/api/v1/email/exists?email=' + email, '', 'GET').then(function (result) {\n            console.log(result, 'result'); // console.log(JSON.stringify(result),'does email exist');\n\n            if (result.message === true) {\n              _this2.setState({\n                emailHelpText: {\n                  state: true,\n                  error: true,\n                  text: 'Email already exist'\n                }\n              });\n            } else {\n              _this2.setState({\n                emailHelpText: {\n                  state: false,\n                  error: false,\n                  text: ' '\n                }\n              });\n            }\n\n            resolve(_this2.state.emailHelpText.error);\n          }).catch(function (error) {\n            console.log(error);\n          });\n        });\n      } else {\n        this.setState({\n          emailHelpText: {\n            state: true,\n            error: true,\n            text: 'Email already exist'\n          }\n        });\n      }\n    }\n  }, {\n    key: \"validateName\",\n    value: function validateName(input) {\n      if (input.trim() === '') {\n        this.setState({\n          nameHelpText: {\n            state: true,\n            error: true,\n            text: 'Name is required'\n          }\n        });\n        return false;\n      } else {\n        this.setState({\n          nameHelpText: {\n            state: false,\n            error: false,\n            text: 'Name is required'\n          }\n        });\n        return true;\n      }\n    }\n  }, {\n    key: \"getAdminTypes\",\n    value: function getAdminTypes() {\n      var _this3 = this;\n\n      httpHelper.serverReq('http://localhost:3009/api/v1/farms/all').then(function (response) {\n        if (response.success) {\n          _this3.setState({\n            userTypes: response.success.data\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DashBoardLayOut, null, React.createElement(\"hr\", null), React.createElement(\"h2\", {\n        id: \"form-head\"\n      }, this.props.farmId ? \"Edit \" : \"Add a \", \"Farm\"), React.createElement(\"br\", null), React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\"\n      }, React.createElement(\"div\", {\n        className: \"panel panel-primary\",\n        \"data-collapsed\": \"0\",\n        id: \"form\"\n      }, React.createElement(\"div\", {\n        className: \"panel-body\"\n      }, React.createElement(\"form\", {\n        id: \"member-registration\",\n        onSubmit: this.handleSubmit,\n        className: \"form-horizontal\"\n      }, this.state.helpBlock.state ? React.createElement(HelpBlock, {\n        type: this.state.helpBlock.error,\n        text: this.state.helpBlock.text\n      }) : '', React.createElement(\"fieldset\", null, React.createElement(\"div\", {\n        className: \"control-group\"\n      }, React.createElement(\"div\", {\n        className: \"control-label\"\n      }, React.createElement(\"label\", {\n        id: \"jform_name-lbl\",\n        htmlFor: \"jform_name\",\n        className: \"hasPopover required\",\n        title: \"Name\",\n        \"data-content\": \"Enter your full name.\"\n      }, \"Name\", React.createElement(\"span\", {\n        className: \"star\"\n      }, \"\\xA0*\"))), React.createElement(\"div\", {\n        className: \"controls\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"jform_name\",\n        className: \"required\",\n        size: \"30\",\n        required: true,\n        \"aria-required\": \"true\",\n        value: this.state.name,\n        onChange: this.handleChange\n      }), this.state.nameHelpText.state ? React.createElement(FormHelpText, {\n        type: this.state.nameHelpText.error,\n        text: this.state.nameHelpText.text\n      }) : '')), React.createElement(\"div\", {\n        className: \"control-group\"\n      }, React.createElement(\"div\", {\n        className: \"control-label\"\n      }, React.createElement(\"label\", {\n        id: \"jform_email1-lbl\",\n        htmlFor: \"jform_email1\",\n        className: \"hasPopover required\",\n        title: \"Email Address\",\n        \"data-content\": \"Enter your email address.\"\n      }, \"Email Address\", React.createElement(\"span\", {\n        className: \"star\"\n      }, \"\\xA0*\"))), React.createElement(\"div\", {\n        className: \"controls\"\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        onChange: this.handleChange,\n        className: \"validate-email required\",\n        id: \"jform_email1\",\n        size: \"30\",\n        value: this.state.email,\n        autoComplete: \"email\",\n        required: true,\n        \"aria-required\": \"true\"\n      })), this.state.emailHelpText.state ? React.createElement(FormHelpText, {\n        type: this.state.emailHelpText.error,\n        text: this.state.emailHelpText.text\n      }) : '')), React.createElement(\"div\", {\n        className: \"controls col-sm-12\"\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\"\n      }, \"create user\"), React.createElement(\"p\", null, \"Don't have an account?\", React.createElement(\"br\", null)), React.createElement(\"div\", {\n        className: \"mod-menu mod-menu__social\"\n      }, React.createElement(\"ul\", {\n        className: \"nav menu social\"\n      }, React.createElement(\"li\", {\n        className: \"item-148\"\n      }, React.createElement(\"a\", {\n        className: \"\",\n        href: \"#\",\n        title: \"Facebook\"\n      }, React.createElement(\"img\", {\n        src: \"../images/fb-button.png\",\n        alt: \"fb-button\",\n        height: \"500\",\n        width: \"200\"\n      }))), React.createElement(\"li\", {\n        className: \"item-149\"\n      }, React.createElement(\"a\", {\n        className: \"\",\n        href: \"#\",\n        title: \"Google\"\n      }, React.createElement(\"img\", {\n        src: \"../images/google_signin_buttons/web/2x/btn_google_signin_light_focus_web@2x.png\",\n        alt: \"g-button\",\n        height: \"200\",\n        width: \"200\"\n      }))))))))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var req;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req;\n                return _context.abrupt(\"return\", {\n                  farmId: req.params.farmId\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return createFarm;\n}(React.Component);\n\nexport default createFarm;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\easycow\\pages\\admin\\create-user.js"],"names":["React","DashBoardLayOut","CreateFarmForm","isAdmin","$","httpHelper","HelpBlock","FormHelpText","Router","createFarm","state","name","redirect","emailHelpText","error","text","nameHelpText","e","target","event","value","type","checked","setState","validateName","validateEmail","preventDefault","loginHelpBlock","formData","FormData","append","email","permission","HttpHelper","httpReq","then","response","success","helpBlock","catch","resolve","reject","result","console","log","message","input","trim","serverReq","userTypes","data","props","farmId","handleSubmit","handleChange","req","params","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport DashBoardLayOut from '../../layouts/AdminDashboardLayout';\r\nimport CreateFarmForm from '../../components/createFarm';\r\nimport isAdmin from  '../../middlewares/isAdmin';\r\nimport $ from 'jquery';\r\nimport httpHelper from \"../../helpers/httpHelper\";\r\nimport HelpBlock from \"../../components/loginForm\";\r\nimport FormHelpText from \"../../components/signupForm\";\r\nimport Router from \"next/dist/client/router\";\r\n\r\nclass createFarm extends React.Component{\r\n\r\n  static async getInitialProps({ req }) {\r\n    return {farmId:req.params.farmId};\r\n  }\r\n\r\n  componentDidMount() {\r\n    isAdmin();\r\n    this.state = {\r\n      name:'',\r\n      redirect:false,\r\n      emailHelpText :{\r\n        state:false,\r\n        error:false,\r\n        text:''\r\n      },\r\n      nameHelpText:{\r\n        state:false,\r\n        error:false,\r\n        text:''\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange(e){\r\n\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    switch (target.name) {\r\n      case 'name':\r\n        this.validateName(target.value);\r\n        break;\r\n\r\n      case 'email':\r\n        this.validateEmail(target.value);\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n    this.setState({ loginHelpBlock:{\r\n        state:false,\r\n        error:false,\r\n        text:''\r\n      }});\r\n\r\n    let formData = new FormData();\r\n    formData.append('name',this.state.name);\r\n    formData.append('email',this.state.email);\r\n    formData.append('permission',this.state.permission);\r\n\r\n\r\n\r\n    HttpHelper.httpReq('http://localhost:3009/api/v1/user/admin/create',formData,'POST')\r\n      .then((response)=>{\r\n        if (response.success){\r\n          this.setState({ helpBlock:{\r\n              state:true,\r\n              error:false,\r\n              text:'user created successfully'\r\n            }});\r\n        }else{\r\n          this.setState({ helpBlock:{\r\n              state:true,\r\n              error:true,\r\n              text:'error creating user'\r\n            }});\r\n        }\r\n      }).catch((error)=>{\r\n      this.setState({ helpBlock:{\r\n          state:true,\r\n          error:true,\r\n          text:'error creating user'\r\n        }});\r\n      });\r\n\r\n  }\r\n\r\n  validateEmail(email){\r\n    if (email !== 'undefined'){\r\n      return new Promise( (resolve,reject)=> {\r\n        HttpHelper.httpReq('http://localhost:3009/api/v1/email/exists?email='+email,'','GET')\r\n          .then((result)=>{\r\n            console.log(result,'result');\r\n            // console.log(JSON.stringify(result),'does email exist');\r\n            if (result.message === true){\r\n              this.setState({\r\n                emailHelpText:{\r\n                  state:true,\r\n                  error:true,\r\n                  text:'Email already exist'\r\n                }\r\n              });\r\n            }else{\r\n              this.setState({\r\n                emailHelpText:{\r\n                  state:false,\r\n                  error:false,\r\n                  text:' '\r\n                }\r\n              });\r\n            }\r\n            resolve(this.state.emailHelpText.error);\r\n          }).catch((error)=>{console.log(error)});\r\n      })\r\n    }else{\r\n      this.setState({\r\n        emailHelpText:{\r\n          state:true,\r\n          error:true,\r\n          text:'Email already exist'\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  validateName(input){\r\n    if (input.trim() === ''){\r\n      this.setState({nameHelpText:{\r\n          state:true,\r\n          error:true,\r\n          text:'Name is required'\r\n        }});\r\n      return false;\r\n    }else{\r\n      this.setState({nameHelpText:{\r\n          state:false,\r\n          error:false,\r\n          text:'Name is required'\r\n        }});\r\n      return true;\r\n    }\r\n  }\r\n\r\n  getAdminTypes(){\r\n    httpHelper.serverReq('http://localhost:3009/api/v1/farms/all').then( (response)=> {\r\n      if (response.success){\r\n        this.setState({userTypes:response.success.data});\r\n      }\r\n    })\r\n    }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <DashBoardLayOut>\r\n        <hr/>\r\n        <h2 id=\"form-head\">{this.props.farmId?\"Edit \":\"Add a \"}Farm</h2>\r\n        <br/>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"panel panel-primary\" data-collapsed=\"0\" id=\"form\">\r\n              <div className=\"panel-body\">\r\n                <form id=\"member-registration\" onSubmit={this.handleSubmit} className=\"form-horizontal\">\r\n                  {\r\n\r\n                    this.state.helpBlock.state?<HelpBlock type={this.state.helpBlock.error} text={this.state.helpBlock.text} />:''\r\n                  }\r\n                  <fieldset>\r\n                    <div className=\"control-group\">\r\n                      <div className=\"control-label\">\r\n                        <label id=\"jform_name-lbl\" htmlFor=\"jform_name\" className=\"hasPopover required\"\r\n                               title=\"Name\" data-content=\"Enter your full name.\">\r\n                          Name<span className=\"star\">&#160;*</span></label>\r\n                      </div>\r\n                      <div className=\"controls\">\r\n                        <input type=\"text\"  name=\"name\" id=\"jform_name\"  className=\"required\"\r\n                               size=\"30\" required aria-required=\"true\" value={this.state.name} onChange={this.handleChange} />\r\n\r\n                        {\r\n\r\n                          this.state.nameHelpText.state?<FormHelpText type={this.state.nameHelpText.error} text={this.state.nameHelpText.text} />:''\r\n                        }\r\n\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"control-group\">\r\n                      <div className=\"control-label\">\r\n                        <label id=\"jform_email1-lbl\" htmlFor=\"jform_email1\" className=\"hasPopover required\"\r\n                               title=\"Email Address\" data-content=\"Enter your email address.\">\r\n                          Email Address<span className=\"star\">&#160;*</span></label>\r\n                      </div>\r\n                      <div className=\"controls\">\r\n                        <input type=\"email\" name=\"email\" onChange={this.handleChange} className=\"validate-email required\"\r\n                               id=\"jform_email1\"  size=\"30\" value={this.state.email} autoComplete=\"email\" required\r\n                               aria-required=\"true\"/></div>\r\n                      {\r\n                        this.state.emailHelpText.state?<FormHelpText type={this.state.emailHelpText.error} text={this.state.emailHelpText.text} />:''\r\n                      }\r\n                    </div>\r\n\r\n                  </fieldset>\r\n                  <div className=\"controls col-sm-12\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">create user</button>\r\n\r\n                    <p>Don't have an account?<br /></p>\r\n                    <div className=\"mod-menu mod-menu__social\">\r\n                      <ul className=\"nav menu social\">\r\n                        <li className=\"item-148\"><a className=\"\" href=\"#\" title=\"Facebook\"><img\r\n                          src=\"../images/fb-button.png\" alt=\"fb-button\" height=\"500\" width=\"200\" /></a>\r\n                        </li>\r\n                        <li className=\"item-149\"><a className=\"\" href=\"#\" title=\"Google\"><img\r\n                          src=\"../images/google_signin_buttons/web/2x/btn_google_signin_light_focus_web@2x.png\"\r\n                          alt=\"g-button\" height=\"200\" width=\"200\" /></a>\r\n                        </li>\r\n\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </DashBoardLayOut>\r\n    )\r\n  }\r\n}\r\n\r\nexport default createFarm;\r\n"]},"metadata":{},"sourceType":"module"}