{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar HttpHelper =\n/*#__PURE__*/\nfunction () {\n  function HttpHelper() {\n    _classCallCheck(this, HttpHelper);\n  }\n\n  _createClass(HttpHelper, null, [{\n    key: \"httpReq\",\n    value: function httpReq() {\n      var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var method = arguments.length > 2 ? arguments[2] : undefined;\n      var contentType;\n\n      if (data instanceof FormData) {\n        contentType = 'undefined';\n      } else {\n        contentType = 'application/json';\n      }\n\n      console.log(contentType, 'content type'); // Default options are marked with *\n\n      return fetch(url, {\n        method: method !== \"undefined\" ? method : 'GET',\n        // *GET, POST, PUT, DELETE, etc.\n        mode: 'no-cors',\n        // no-cors, cors, *same-origin\n        cache: 'no-cache',\n        // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin',\n        // include, *same-origin, omit\n        headers: {\n          'Content-Type': contentType // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        redirect: 'follow',\n        // manual, *follow, error\n        referrer: 'no-referrer',\n        // no-referrer, *client\n        body: contentType === 'undefined' ? data : _JSON$stringify(data) // body data type must match \"Content-Type\" header\n\n      }).then(function (response) {\n        switch (response.status) {\n          case \"200\":\n            return response.json();\n            break;\n\n          default:\n            return new _Promise(function (resolve, reject) {\n              reject({\n                error: response.status,\n                text: response.statusText\n              });\n            });\n        }\n      }); // parses JSON response into native JavaScript objects\n    }\n  }]);\n\n  return HttpHelper;\n}();\n\nexport default HttpHelper;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\easycow\\helpers\\httpHelper.js"],"names":["HttpHelper","url","data","method","contentType","FormData","console","log","fetch","mode","cache","credentials","headers","redirect","referrer","body","then","response","status","json","resolve","reject","error","text","statusText"],"mappings":";;;;;IAAMA,U;;;;;;;;;8BACuC;AAAA,UAA5BC,GAA4B,uEAAtB,EAAsB;AAAA,UAAlBC,IAAkB,uEAAX,EAAW;AAAA,UAARC,MAAQ;AACvC,UAAIC,WAAJ;;AACA,UAAIF,IAAI,YAAaG,QAArB,EAA8B;AAC3BD,QAAAA,WAAW,GAAG,WAAd;AACF,OAFD,MAEK;AACFA,QAAAA,WAAW,GAAG,kBAAd;AACF;;AAEDE,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAwB,cAAxB,EARuC,CASvC;;AACA,aAAOI,KAAK,CAACP,GAAD,EAAM;AAChBE,QAAAA,MAAM,EAAGA,MAAM,KAAK,WAAX,GAAwBA,MAAxB,GAA+B,KADxB;AACgC;AAChDM,QAAAA,IAAI,EAAE,SAFU;AAEC;AACjBC,QAAAA,KAAK,EAAE,UAHS;AAGG;AACnBC,QAAAA,WAAW,EAAE,aAJG;AAIY;AAC5BC,QAAAA,OAAO,EAAE;AACP,0BAAgBR,WADT,CAEP;;AAFO,SALO;AAShBS,QAAAA,QAAQ,EAAE,QATM;AASI;AACpBC,QAAAA,QAAQ,EAAE,aAVM;AAUS;AACzBC,QAAAA,IAAI,EAAEX,WAAW,KAAK,WAAhB,GAA4BF,IAA5B,GAAiC,gBAAeA,IAAf,CAXvB,CAW6C;;AAX7C,OAAN,CAAL,CAaJc,IAbI,CAaE,UAACC,QAAD,EAAa;AAClB,gBAAQA,QAAQ,CAACC,MAAjB;AACE,eAAK,KAAL;AACE,mBAAOD,QAAQ,CAACE,IAAT,EAAP;AACA;;AACF;AACE,mBAAO,aAAY,UAAUC,OAAV,EAAkBC,MAAlB,EAA0B;AAC3CA,cAAAA,MAAM,CAAC;AAACC,gBAAAA,KAAK,EAACL,QAAQ,CAACC,MAAhB;AAAuBK,gBAAAA,IAAI,EAACN,QAAQ,CAACO;AAArC,eAAD,CAAN;AACD,aAFM,CAAP;AALJ;AASD,OAvBI,CAAP,CAVuC,CAiCjC;AACP;;;;;;AAEL,eAAexB,UAAf","sourcesContent":["class HttpHelper {\r\n  static httpReq(url = '', data = {},method) {\r\n      let contentType;\r\n      if (data instanceof  FormData){\r\n         contentType = 'undefined';\r\n      }else{\r\n         contentType = 'application/json';\r\n      }\r\n\r\n      console.log(contentType,'content type');\r\n      // Default options are marked with *\r\n      return fetch(url, {\r\n        method: (method !== \"undefined\" ?method:'GET'), // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'no-cors', // no-cors, cors, *same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n          'Content-Type': contentType,\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrer: 'no-referrer', // no-referrer, *client\r\n        body: contentType === 'undefined'?data:JSON.stringify(data), // body data type must match \"Content-Type\" header\r\n      })\r\n        .then( (response)=> {\r\n          switch (response.status) {\r\n            case \"200\":\r\n              return response.json();\r\n              break;\r\n            default:\r\n              return new Promise(function (resolve,reject) {\r\n                reject({error:response.status,text:response.statusText});\r\n              })\r\n          }\r\n        }); // parses JSON response into native JavaScript objects\r\n    }\r\n}\r\nexport default HttpHelper;"]},"metadata":{},"sourceType":"module"}