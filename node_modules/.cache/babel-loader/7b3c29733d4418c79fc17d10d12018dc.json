{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport HttpHelper from '../helpers/httpHelper';\nimport FormHelpText from '../components/FormHelpText'; // import {\n//   BrowserRouter as Router,\n//   Route,\n//   Link,\n//   Redirect,\n//   withRouter\n// } from \"react-router-dom\";\n\nimport Router from 'next/router';\nimport HelpBlock from \"../components/HelpBlock\";\n\nvar SignUpFormComp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignUpFormComp, _React$Component);\n\n  function SignUpFormComp(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpFormComp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUpFormComp).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.form = React.createRef();\n    _this.state = {\n      name: '',\n      redirect: false,\n      emailHelpText: {\n        state: false,\n        error: false,\n        text: ''\n      },\n      passwordHelpText: {\n        state: false,\n        error: false,\n        text: ''\n      },\n      confirmPasswordHelpText: {\n        state: false,\n        error: false,\n        text: ''\n      },\n      nameHelpText: {\n        state: false,\n        error: false,\n        text: ''\n      },\n      TOSHelpText: {\n        state: false,\n        error: false,\n        text: ''\n      },\n      signUpHelpBlock: {\n        state: false,\n        error: false,\n        text: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(SignUpFormComp, [{\n    key: \"helpFormText\",\n    value: function helpFormText() {}\n  }, {\n    key: \"validateName\",\n    value: function validateName(input) {\n      if (input.trim() === '') {\n        this.setState({\n          nameHelpText: {\n            state: true,\n            error: true,\n            text: 'Name is required'\n          }\n        });\n        return false;\n      } else {\n        this.setState({\n          nameHelpText: {\n            state: false,\n            error: false,\n            text: 'Name is required'\n          }\n        });\n        return true;\n      }\n    }\n  }, {\n    key: \"validatePassword\",\n    value: function validatePassword(password) {\n      if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/.test(password)) {\n        this.setState({\n          passwordHelpText: {\n            state: true,\n            error: true,\n            text: 'Password must be more than length of atleast 8  and contain a lower case , uppercase character and numerical character'\n          }\n        });\n        return false;\n      } else {\n        this.setState({\n          passwordHelpText: {\n            state: true,\n            error: false,\n            text: 'Password OK'\n          }\n        });\n        return true;\n      }\n    }\n  }, {\n    key: \"validateConfPassword\",\n    value: function validateConfPassword(confPassword, password) {\n      if (password !== confPassword) {\n        this.setState({\n          confirmPasswordHelpText: {\n            state: true,\n            error: true,\n            text: 'Passwords do not match'\n          }\n        });\n        return false;\n      } else {\n        this.setState({\n          confirmPasswordHelpText: {\n            state: true,\n            error: false,\n            text: 'Passwords matches'\n          }\n        });\n        return true;\n      }\n    }\n  }, {\n    key: \"validateEmail\",\n    value: function validateEmail(email) {\n      var _this2 = this;\n\n      if (email !== 'undefined') {\n        return new _Promise(function (resolve, reject) {\n          HttpHelper.httpReq('email/exists?email=' + email, '', 'GET').then(function (result) {\n            console.log(result, 'result'); // console.log(JSON.stringify(result),'does email exist');\n\n            if (result.message === true) {\n              _this2.setState({\n                emailHelpText: {\n                  state: true,\n                  error: true,\n                  text: 'Email already exist'\n                }\n              });\n            } else {\n              _this2.setState({\n                emailHelpText: {\n                  state: false,\n                  error: false,\n                  text: ' '\n                }\n              });\n            }\n\n            resolve(_this2.state.emailHelpText.error);\n          }).catch(function (error) {\n            console.log(error);\n          });\n        });\n      } else {\n        this.setState({\n          emailHelpText: {\n            state: true,\n            error: true,\n            text: 'Email already exist'\n          }\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n\n      switch (target.name) {\n        case 'name':\n          this.validateName(target.value);\n          break;\n\n        case 'password':\n          this.validatePassword(target.value);\n          this.validateConfPassword(target.value, this.state.confirmPassword);\n          break;\n\n        case 'confirmPassword':\n          this.validateConfPassword(target.value, this.state.password);\n          break;\n\n        case 'email':\n          this.validateEmail(target.value);\n          break;\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      this.validateEmail(this.state.email).then(function (emailExists) {\n        if (_this3.validateName(_this3.state.name) && _this3.validatePassword(_this3.state.password) && _this3.validateConfPassword(_this3.state.password, _this3.state.confirmPassword) && emailExists === false) {\n          var formData = new FormData();\n          formData.append('name', _this3.state.name);\n          formData.append('password', _this3.state.password);\n          formData.append('confirmPassword', _this3.state.confirmPassword);\n          formData.append('email', _this3.state.email);\n          HttpHelper.httpReq('sign-up', formData, 'POST').then(function (result) {\n            if (result.success) {\n              _this3.setState({\n                signUpHelpBlock: {\n                  state: true,\n                  error: false,\n                  text: 'Registration Successful. You would receive a link in your email to activate your Account'\n                }\n              });\n\n              _this3.form.current.reset();\n\n              ;\n              return true;\n            }\n\n            _this3.setState({\n              signUpHelpBlock: {\n                state: true,\n                error: true,\n                text: 'An error occcured while creating your account'\n              }\n            });\n\n            console.log(result);\n          }).catch(function (error) {\n            _this3.setState({\n              signUpHelpBlock: {\n                state: true,\n                error: true,\n                text: 'An error occured while creating your account'\n              }\n            });\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        action: \"#\",\n        className: \"donate-form default-form me\",\n        onSubmit: this.handleSubmit,\n        ref: this.form\n      }, this.state.signUpHelpBlock.state ? React.createElement(HelpBlock, {\n        type: this.state.signUpHelpBlock.error,\n        text: this.state.signUpHelpBlock.text\n      }) : '', React.createElement(\"div\", {\n        className: \"form-bg\"\n      }, React.createElement(\"div\", {\n        className: \"row clearfix\"\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"p\", null, \"Your Name*\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"jform_name\",\n        className: \"required\",\n        size: \"30\",\n        required: true,\n        \"aria-required\": \"true\",\n        value: this.state.name,\n        onChange: this.handleChange\n      }), this.state.nameHelpText.state ? React.createElement(FormHelpText, {\n        type: this.state.nameHelpText.error,\n        text: this.state.nameHelpText.text\n      }) : '')), React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"p\", null, \"Email*\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        onChange: this.handleChange,\n        className: \"validate-email required\",\n        id: \"jform_email1\",\n        size: \"30\",\n        value: this.state.email,\n        autoComplete: \"email\",\n        required: true,\n        \"aria-required\": \"true\"\n      })), this.state.emailHelpText.state ? React.createElement(FormHelpText, {\n        type: this.state.emailHelpText.error,\n        text: this.state.emailHelpText.text\n      }) : ''), React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"p\", null, \"Password*\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"jform_password1\",\n        onChange: this.handleChange,\n        autoComplete: \"off\",\n        className: \"validate-password required\",\n        size: \"30\",\n        value: this.state.password,\n        required: true,\n        \"aria-required\": \"true\"\n      })), this.state.passwordHelpText.state ? React.createElement(FormHelpText, {\n        type: this.state.passwordHelpText.error,\n        text: this.state.passwordHelpText.text\n      }) : ''), React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"p\", null, \"Confirm Password*\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        onChange: this.handleChange,\n        id: \"jform_password2\",\n        autoComplete: \"off\",\n        className: \"validate-password required\",\n        size: \"30\",\n        value: this.state.password2,\n        required: true,\n        \"aria-required\": \"true\"\n      })), this.state.confirmPasswordHelpText.state ? React.createElement(FormHelpText, {\n        type: this.state.confirmPasswordHelpText.error,\n        text: this.state.confirmPasswordHelpText.text\n      }) : ''))), React.createElement(\"div\", {\n        className: \"center text-center me\"\n      }, React.createElement(\"button\", {\n        className: \"theme-btn\",\n        type: \"submit\"\n      }, \"Register\")));\n    }\n  }]);\n\n  return SignUpFormComp;\n}(React.Component);\n\nexport default SignUpFormComp;","map":{"version":3,"sources":["/home/darnyelx/Projects/easycow/components/signupForm.js"],"names":["React","HttpHelper","FormHelpText","Router","HelpBlock","SignUpFormComp","props","handleChange","bind","handleSubmit","form","createRef","state","name","redirect","emailHelpText","error","text","passwordHelpText","confirmPasswordHelpText","nameHelpText","TOSHelpText","signUpHelpBlock","input","trim","setState","password","test","confPassword","email","resolve","reject","httpReq","then","result","console","log","message","catch","e","target","event","value","type","checked","validateName","validatePassword","validateConfPassword","confirmPassword","validateEmail","preventDefault","emailExists","formData","FormData","append","success","current","reset","password2","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport HttpHelper from '../helpers/httpHelper';\nimport FormHelpText from '../components/FormHelpText';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Link,\n//   Redirect,\n//   withRouter\n// } from \"react-router-dom\";\nimport Router from 'next/router'\nimport HelpBlock from \"../components/HelpBlock\";\n\n class  SignUpFormComp extends React.Component{\n   constructor(props){\n     super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.form      = React.createRef();\n\n\n     this.state = {\n        name:'',\n        redirect:false,\n        emailHelpText :{\n          state:false,\n          error:false,\n          text:''\n        },\n        passwordHelpText:{\n          state:false,\n          error:false,\n          text:''\n        },\n        confirmPasswordHelpText:{\n          state:false,\n          error:false,\n          text:''\n        },\n        nameHelpText:{\n          state:false,\n          error:false,\n          text:''\n        },\n        TOSHelpText:{\n          state:false,\n          error:false,\n          text:''\n        },\n        signUpHelpBlock:{\n          state:false,\n          error:false,\n          text:''\n        }\n      }\n   }\n\n   helpFormText(){\n\n   }\n\n   validateName(input){\n     if (input.trim() === ''){\n       this.setState({nameHelpText:{\n           state:true,\n           error:true,\n           text:'Name is required'\n         }});\n       return false;\n     }else{\n       this.setState({nameHelpText:{\n           state:false,\n           error:false,\n           text:'Name is required'\n         }});\n       return true;\n     }\n   }\n\n   validatePassword(password){\n     if (!(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/.test(password))){\n       this.setState({passwordHelpText:{\n           state:true,\n           error:true,\n           text:'Password must be more than length of atleast 8  and contain a lower case , uppercase character and numerical character'\n         }});\n       return false\n     }else{\n       this.setState({\n         passwordHelpText:{\n           state:true,\n           error:false,\n           text:'Password OK'\n         }\n       })\n       return true;\n     }\n   }\n\n   validateConfPassword(confPassword,password){\n     if (password !== confPassword){\n       this.setState({\n         confirmPasswordHelpText:{\n           state:true,\n           error:true,\n           text:'Passwords do not match'\n         }\n       })\n       return false;\n     }else{\n       this.setState({\n         confirmPasswordHelpText:{\n           state:true,\n           error:false,\n           text:'Passwords matches'\n         }\n       });\n       return true;\n     }\n   }\n\n   validateEmail(email){\n     if (email !== 'undefined'){\n       return new Promise( (resolve,reject)=> {\n         HttpHelper.httpReq('email/exists?email='+email,'','GET')\n           .then((result)=>{\n             console.log(result,'result');\n             // console.log(JSON.stringify(result),'does email exist');\n             if (result.message === true){\n               this.setState({\n                 emailHelpText:{\n                   state:true,\n                   error:true,\n                   text:'Email already exist'\n                 }\n               });\n             }else{\n               this.setState({\n                 emailHelpText:{\n                   state:false,\n                   error:false,\n                   text:' '\n                 }\n               });\n             }\n             resolve(this.state.emailHelpText.error);\n           }).catch((error)=>{console.log(error)});\n       })\n     }else{\n       this.setState({\n         emailHelpText:{\n           state:true,\n           error:true,\n           text:'Email already exist'\n         }\n       })\n     }\n\n\n   }\n\n   handleChange(e){\n\n     const target = event.target;\n     const value = target.type === 'checkbox' ? target.checked : target.value;\n     const name = target.name;\n     this.setState({\n       [name]: value\n     });\n     switch (target.name) {\n       case 'name':\n          this.validateName(target.value);\n         break;\n       case 'password' :\n         this.validatePassword(target.value);\n         this.validateConfPassword(target.value,this.state.confirmPassword);\n\n         break;\n       case 'confirmPassword':\n          this.validateConfPassword(target.value,this.state.password);\n         break;\n       case 'email':\n         this.validateEmail(target.value);\n         break;\n     }\n\n   }\n\n   handleSubmit(e){\n     e.preventDefault();\n\n     this.validateEmail(this.state.email).then( (emailExists)=> {\n\n       if (this.validateName(this.state.name) && this.validatePassword(this.state.password) && this.validateConfPassword(this.state.password,this.state.confirmPassword) && (emailExists  === false) ){\n\n         let formData = new FormData();\n         formData.append('name',this.state.name);\n         formData.append('password',this.state.password);\n         formData.append('confirmPassword',this.state.confirmPassword);\n         formData.append('email',this.state.email);\n\n\n         HttpHelper.httpReq('sign-up',formData,'POST')\n           .then((result)=>{\n             if(result.success){\n\n              this.setState({signUpHelpBlock:{\n                  state:true,\n                  error:false,\n                  text:'Registration Successful. You would receive a link in your email to activate your Account'\n                }});\n               this.form.current.reset(); ;\n               return   true\n             }\n             this.setState({signUpHelpBlock:{\n                 state:true,\n                 error:true,\n                 text:'An error occcured while creating your account'\n               }});\n             console.log(result)\n           }).catch((error)=>{\n           this.setState({signUpHelpBlock:{\n               state:true,\n               error:true,\n               text:'An error occured while creating your account'\n             }});\n         });\n       }\n     })\n\n   }\n\n\n   render() {\n    return (\n\n      <form action=\"#\" className=\"donate-form default-form me\" onSubmit={this.handleSubmit} ref={this.form} >\n        {\n\n          this.state.signUpHelpBlock.state?<HelpBlock type={this.state.signUpHelpBlock.error} text={this.state.signUpHelpBlock.text} />:''\n        }\n        <div className=\"form-bg\">\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12\">\n              <div className=\"form-group\">\n                <p>Your Name*</p>\n                <input type=\"text\"  name=\"name\" id=\"jform_name\"  className=\"required\"\n                       size=\"30\" required aria-required=\"true\" value={this.state.name} onChange={this.handleChange} />\n\n                {\n\n                  this.state.nameHelpText.state?<FormHelpText type={this.state.nameHelpText.error} text={this.state.nameHelpText.text} />:''\n                }\n              </div>\n            </div>\n            <div className=\"col-lg-12 col-md-12 col-sm-12\">\n              <div className=\"form-group\">\n                <p>Email*</p>\n                <input type=\"email\" name=\"email\" onChange={this.handleChange} className=\"validate-email required\"\n                       id=\"jform_email1\"  size=\"30\" value={this.state.email} autoComplete=\"email\" required\n                       aria-required=\"true\"/></div>\n              {\n                this.state.emailHelpText.state?<FormHelpText type={this.state.emailHelpText.error} text={this.state.emailHelpText.text} />:''\n              }\n              </div>\n            <div className=\"col-lg-12 col-md-12 col-sm-12\">\n              <div className=\"form-group\">\n                <p>Password*</p>\n                <input type=\"password\" name=\"password\" id=\"jform_password1\" onChange={this.handleChange}\n                       autoComplete=\"off\" className=\"validate-password required\" size=\"30\"\n                       value={this.state.password} required aria-required=\"true\"/></div>\n              {\n\n                this.state.passwordHelpText.state?<FormHelpText type={this.state.passwordHelpText.error} text={this.state.passwordHelpText.text} />:''\n              }\n            </div>\n            <div className=\"col-lg-12 col-md-12 col-sm-12\">\n              <div className=\"form-group\">\n                <p>Confirm Password*</p>\n                <input type=\"password\" name=\"confirmPassword\" onChange={this.handleChange} id=\"jform_password2\"\n                       autoComplete=\"off\" className=\"validate-password required\" size=\"30\"\n                       value={this.state.password2} required aria-required=\"true\"/></div>\n              {\n\n                this.state.confirmPasswordHelpText.state?<FormHelpText type={this.state.confirmPasswordHelpText.error} text={this.state.confirmPasswordHelpText.text} />:''\n              }\n            </div>\n            </div>\n          </div>\n\n        <div className=\"center text-center me\">\n          <button className=\"theme-btn\" type=\"submit\">Register</button>\n        </div>\n      </form>\n\n\n    );\n   }\n }\n export  default SignUpFormComp;"]},"metadata":{},"sourceType":"module"}