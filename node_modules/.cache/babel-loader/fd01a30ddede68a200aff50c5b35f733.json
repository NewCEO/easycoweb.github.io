{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport httpHelper from '../helpers/httpHelper';\nimport HelpBlock from '../components/HelpBlock';\n\nvar createFarmActivityComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(createFarmActivityComponent, _React$Component);\n\n  function createFarmActivityComponent(props) {\n    var _this;\n\n    _classCallCheck(this, createFarmActivityComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(createFarmActivityComponent).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleFileUpload = _this.handleFileUpload.bind(_assertThisInitialized(_this));\n    _this.addThumbnailButton = _this.addThumbnailButton.bind(_assertThisInitialized(_this));\n    _this.fileInput = React.createRef();\n    _this.form = React.createRef();\n    _this.editFarmId = props.farmId;\n    _this.state = {\n      location: ''\n    };\n    _this.state = {\n      formValues: {\n        status: '1'\n      },\n      farmNotification: {\n        state: false,\n        error: false,\n        text: ''\n      },\n      thumbnailCount: 1,\n      images: {},\n      imageThumbnails: [],\n      farmId: props.farmId\n    };\n    return _this;\n  }\n\n  _createClass(createFarmActivityComponent, [{\n    key: \"manageImageThumbnail\",\n    value: function manageImageThumbnail() {}\n  }, {\n    key: \"handleImageAdd\",\n    value: function handleImageAdd() {\n      console.log(this.state.thumbnailCount, 'count');\n      var count = this.sate.thumbnailCount + 1;\n      console.log(count, 'count');\n      var node = React.createElement(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        multiple: \"multiple\",\n        ref: this.fileInput,\n        onChange: this.handleFileUpload,\n        name: \"thumbNail[\".concat(this.state.thumbnailCount + 1, \"]\"),\n        id: \"field-file\",\n        placeholder: \"Placeholder\"\n      });\n      this.setState({\n        thumbnailCount: count\n      });\n      var prevNode = this.state.imageThumbnails || [];\n      prevNode.push(node);\n      return prevNode;\n    }\n  }, {\n    key: \"addThumbnailButton\",\n    value: function addThumbnailButton(e) {\n      e.preventDefault();\n      this.setState({\n        imageThumbnails: this.handleImageAdd(),\n        thumbnailCount: this.state.thumbnailCount++\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLocations();\n      this.getCategories();\n      this.setState({\n        imageThumbnails: this.handleImageAdd()\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      var values;\n      this.state.formValues ? values = this.state.formValues : values = {};\n      values[name] = value;\n      this.setState({\n        formValues: values\n      });\n    }\n  }, {\n    key: \"getLocations\",\n    value: function getLocations() {\n      var _this2 = this;\n\n      var htmlLocations = [];\n      httpHelper.serverReq('http://localhost:3009/api/v1/farms/activities/create/' + this.state.farmId).then(function (locations) {\n        locations.success.data.forEach(function (location) {\n          htmlLocations.push(React.createElement(\"option\", {\n            value: location.id\n          }, location.name));\n        });\n\n        _this2.setState({\n          location: htmlLocations\n        });\n      });\n    }\n  }, {\n    key: \"getCategories\",\n    value: function getCategories() {\n      var _this3 = this;\n\n      var htmlCategories = [];\n      httpHelper.serverReq('http://localhost:3009/api/v1/farms/categories').then(function (categories) {\n        categories.success.data.forEach(function (category) {\n          htmlCategories.push(React.createElement(\"option\", {\n            value: category.id\n          }, category.name));\n        });\n\n        _this3.setState({\n          categories: htmlCategories\n        });\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this4 = this;\n\n      event.preventDefault();\n      this.setState({\n        btnDisabled: true\n      });\n      var values = this.state.formValues;\n      var formData = new FormData();\n\n      for (var key in values) {\n        formData.append(key, values[key]);\n      }\n\n      this.setState({\n        btnDisabled: false\n      });\n      var url = 'http://localhost:3009/api/v1/farms/activities/create/' + this.state.farmId;\n      httpHelper.serverReq(url, formData, 'POST').then(function (result) {\n        if (result.success) {\n          var temp = {};\n\n          if (!_this4.props.farmId) {\n            for (var key in values) {\n              temp[key] = \"\";\n            }\n\n            _this4.setState({\n              formValues: temp\n            });\n          }\n\n          _this4.setState({\n            farmNotification: {\n              state: true,\n              error: false,\n              text: \"Activity added successfully\"\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleFileUpload\",\n    value: function handleFileUpload() {\n      var file = this.fileInput.current.files[0];\n      var name = this.fileInput.current.name;\n      var values;\n      var images = this.state.images;\n      images[name] = file;\n      var formValuesImages = [];\n\n      for (var index in images) {\n        formValuesImages.push(images[index]);\n      }\n\n      this.state.formValues ? values = this.state.formValues : values = {};\n      values[\"image_updates\"] = formValuesImages;\n      console.log(values[\"image_updates\"], 'values');\n      this.setState({\n        formValues: values\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        role: \"form\",\n        id: \"farmForm\",\n        ref: this.form,\n        onSubmit: this.handleSubmit,\n        className: \"form-horizontal  form-groups-bordered\"\n      }, this.state.farmNotification.state ? React.createElement(HelpBlock, {\n        type: this.state.farmNotification.error,\n        text: this.state.farmNotification.text\n      }) : '', React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        htmlFor: \"field-1\",\n        className: \"col-sm-3 control-label\"\n      }, \"Activity \"), React.createElement(\"div\", {\n        className: \"col-sm-5\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"activity\",\n        value: this.state.formValues.description,\n        required: \"required\",\n        onChange: this.handleChange,\n        className: \"form-control\",\n        id: \"field-1\",\n        placeholder: \"Add an Activity\"\n      }))), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        htmlFor: \"field-1\",\n        className: \"col-sm-3 control-label\"\n      }, \"Information\"), React.createElement(\"div\", {\n        className: \"col-sm-5\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"information\",\n        value: this.state.formValues.title,\n        required: \"required\",\n        onChange: this.handleChange,\n        className: \"form-control\",\n        id: \"field-1\",\n        placeholder: \"Activity Information\"\n      }))), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        htmlFor: \"field-1\",\n        className: \"col-sm-3 control-label\"\n      }, \"Summary\"), React.createElement(\"div\", {\n        className: \"col-sm-5\"\n      }, React.createElement(\"textarea\", {\n        type: \"text\",\n        name: \"summary\",\n        value: this.state.formValues.description,\n        required: \"required\",\n        onChange: this.handleChange,\n        className: \"form-control\",\n        id: \"field-1\",\n        placeholder: \"Activity Summary\"\n      }))), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 control-label\"\n      }, \"Week\"), React.createElement(\"div\", {\n        className: \"col-sm-5\"\n      }, React.createElement(\"div\", {\n        className: \"input-group\"\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        value: this.state.formValues.price_per_unit,\n        onChange: this.handleChange,\n        required: \"required\",\n        name: \"weeks\",\n        className: \"form-control\"\n      })))), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 control-label\"\n      }, \"Stage\"), React.createElement(\"div\", {\n        className: \"col-sm-5\"\n      }, React.createElement(\"div\", {\n        className: \"input-group\"\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        value: this.state.formValues.price_per_unit,\n        onChange: this.handleChange,\n        required: \"required\",\n        name: \"stage\",\n        className: \"form-control\"\n      })))), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        htmlFor: \"field-1\",\n        className: \"col-sm-3 control-label\"\n      }, \"Activity Images\"), React.createElement(\"div\", {\n        className: \"col-sm-5\"\n      }, console.log(this.state.imageThumbnails, \"thumbnails\"), this.state.imageThumbnails.map(function (thu) {\n        return thu;\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.addThumbnailButton\n      }, \"Add\"))), React.createElement(\"button\", {\n        type: \"submit\"\n      }, \"Submit\"));\n    }\n  }]);\n\n  return createFarmActivityComponent;\n}(React.Component);\n\nexport default createFarmActivityComponent;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\easycow\\components\\createActivity.js"],"names":["React","httpHelper","HelpBlock","createFarmActivityComponent","props","handleChange","bind","handleSubmit","handleFileUpload","addThumbnailButton","fileInput","createRef","form","editFarmId","farmId","state","location","formValues","status","farmNotification","error","text","thumbnailCount","images","imageThumbnails","console","log","count","sate","node","setState","prevNode","push","e","preventDefault","handleImageAdd","getLocations","getCategories","event","target","value","type","checked","name","values","htmlLocations","serverReq","then","locations","success","data","forEach","id","htmlCategories","categories","category","btnDisabled","formData","FormData","key","append","url","result","temp","file","current","files","formValuesImages","index","description","title","price_per_unit","map","thu","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;IAGMC,2B;;;;;AAEJ,uCAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,qGAAMA,KAAN;AACA,UAAKC,YAAL,GAA0B,MAAKA,YAAL,CAAkBC,IAAlB,+BAA1B;AACA,UAAKC,YAAL,GAA0B,MAAKA,YAAL,CAAkBD,IAAlB,+BAA1B;AACA,UAAKE,gBAAL,GAA0B,MAAKA,gBAAL,CAAsBF,IAAtB,+BAA1B;AACA,UAAKG,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBH,IAAxB,+BAA1B;AACA,UAAKI,SAAL,GAA0BV,KAAK,CAACW,SAAN,EAA1B;AACA,UAAKC,IAAL,GAA0BZ,KAAK,CAACW,SAAN,EAA1B;AAEA,UAAKE,UAAL,GAAkBT,KAAK,CAACU,MAAxB;AACA,UAAKC,KAAL,GAAY;AAACC,MAAAA,QAAQ,EAAC;AAAV,KAAZ;AAGA,UAAKD,KAAL,GAAa;AAACE,MAAAA,UAAU,EAAC;AAACC,QAAAA,MAAM,EAAC;AAAR,OAAZ;AACXC,MAAAA,gBAAgB,EAAC;AACfJ,QAAAA,KAAK,EAAC,KADS;AAEfK,QAAAA,KAAK,EAAC,KAFS;AAGfC,QAAAA,IAAI,EAAC;AAHU,OADN;AAMXC,MAAAA,cAAc,EAAC,CANJ;AAOXC,MAAAA,MAAM,EAAC,EAPI;AAQXC,MAAAA,eAAe,EAAC,EARL;AASXV,MAAAA,MAAM,EAACV,KAAK,CAACU;AATF,KAAb;AAbgB;AA0BjB;;;;2CAEqB,CAErB;;;qCAEe;AACdW,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWO,cAAvB,EAAuC,OAAvC;AACA,UAAIK,KAAK,GAAG,KAAKC,IAAL,CAAUN,cAAV,GAA2B,CAAvC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EAAkB,OAAlB;AACA,UAAIE,IAAI,GAAG;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,QAAQ,EAAC,UAArD;AAAgE,QAAA,GAAG,EAAE,KAAKnB,SAA1E;AAAqF,QAAA,QAAQ,EAAE,KAAKF,gBAApG;AAAsH,QAAA,IAAI,sBAAe,KAAKO,KAAL,CAAWO,cAAX,GAA4B,CAA3C,MAA1H;AAA2K,QAAA,EAAE,EAAC,YAA9K;AAA2L,QAAA,WAAW,EAAC;AAAvM,QAAX;AACA,WAAKQ,QAAL,CAAc;AAACR,QAAAA,cAAc,EAACK;AAAhB,OAAd;AACA,UAAII,QAAQ,GAAI,KAAKhB,KAAL,CAAWS,eAAX,IAA4B,EAA5C;AACEO,MAAAA,QAAQ,CAACC,IAAT,CAAcH,IAAd;AACA,aAAOE,QAAP;AACH;;;uCAEkBE,C,EAAE;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKJ,QAAL,CAAc;AAACN,QAAAA,eAAe,EAAC,KAAKW,cAAL,EAAjB;AAAuCb,QAAAA,cAAc,EAAC,KAAKP,KAAL,CAAWO,cAAX;AAAtD,OAAd;AACD;;;wCAEmB;AAClB,WAAKc,YAAL;AACA,WAAKC,aAAL;AACA,WAAKP,QAAL,CAAc;AAACN,QAAAA,eAAe,EAAC,KAAKW,cAAL;AAAjB,OAAd;AACD;;;iCAEYG,K,EAAM;AACjB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACC,KAAnE;AACA,UAAMG,IAAI,GAAGJ,MAAM,CAACI,IAApB;AACA,UAAIC,MAAJ;AACA,WAAK7B,KAAL,CAAWE,UAAX,GAAsB2B,MAAM,GAAG,KAAK7B,KAAL,CAAWE,UAA1C,GAAqD2B,MAAM,GAAC,EAA5D;AACAA,MAAAA,MAAM,CAACD,IAAD,CAAN,GAAeH,KAAf;AACA,WAAKV,QAAL,CAAc;AACZb,QAAAA,UAAU,EAAE2B;AADA,OAAd;AAGD;;;mCAEa;AAAA;;AACZ,UAAIC,aAAa,GAAG,EAApB;AACA5C,MAAAA,UAAU,CAAC6C,SAAX,CAAqB,0DAAwD,KAAK/B,KAAL,CAAWD,MAAxF,EAAgGiC,IAAhG,CAAsG,UAACC,SAAD,EAAc;AAClHA,QAAAA,SAAS,CAACC,OAAV,CAAkBC,IAAlB,CAAuBC,OAAvB,CAA+B,UAACnC,QAAD,EAAY;AACzC6B,UAAAA,aAAa,CAACb,IAAd,CAAoB;AAAQ,YAAA,KAAK,EAAEhB,QAAQ,CAACoC;AAAxB,aAA8BpC,QAAQ,CAAC2B,IAAvC,CAApB;AACD,SAFD;;AAGA,QAAA,MAAI,CAACb,QAAL,CAAc;AAACd,UAAAA,QAAQ,EAAE6B;AAAX,SAAd;AACD,OALD;AAMD;;;oCAEc;AAAA;;AACb,UAAIQ,cAAc,GAAG,EAArB;AACApD,MAAAA,UAAU,CAAC6C,SAAX,CAAqB,+CAArB,EAAsEC,IAAtE,CAA4E,UAACO,UAAD,EAAe;AACzFA,QAAAA,UAAU,CAACL,OAAX,CAAmBC,IAAnB,CAAwBC,OAAxB,CAAgC,UAACI,QAAD,EAAY;AAC1CF,UAAAA,cAAc,CAACrB,IAAf,CAAqB;AAAQ,YAAA,KAAK,EAAEuB,QAAQ,CAACH;AAAxB,aAA8BG,QAAQ,CAACZ,IAAvC,CAArB;AACD,SAFD;;AAGA,QAAA,MAAI,CAACb,QAAL,CAAc;AAACwB,UAAAA,UAAU,EAAED;AAAb,SAAd;AACD,OALD;AAMD;;;iCAEYf,K,EAAM;AAAA;;AACjBA,MAAAA,KAAK,CAACJ,cAAN;AACA,WAAKJ,QAAL,CAAc;AAAC0B,QAAAA,WAAW,EAAC;AAAb,OAAd;AACA,UAAIZ,MAAM,GAAG,KAAK7B,KAAL,CAAWE,UAAxB;AACA,UAAIwC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;;AACA,WAAK,IAAIC,GAAT,IAAgBf,MAAhB,EAAuB;AACrBa,QAAAA,QAAQ,CAACG,MAAT,CAAgBD,GAAhB,EAAoBf,MAAM,CAACe,GAAD,CAA1B;AACD;;AACD,WAAK7B,QAAL,CAAc;AAAC0B,QAAAA,WAAW,EAAC;AAAb,OAAd;AAEA,UAAIK,GAAG,GAAG,0DAAwD,KAAK9C,KAAL,CAAWD,MAA7E;AAEAb,MAAAA,UAAU,CAAC6C,SAAX,CAAqBe,GAArB,EAAyBJ,QAAzB,EAAkC,MAAlC,EAA0CV,IAA1C,CAAgD,UAACe,MAAD,EAAW;AACzD,YAAIA,MAAM,CAACb,OAAX,EAAmB;AACjB,cAAIc,IAAI,GAAG,EAAX;;AACA,cAAI,CAAC,MAAI,CAAC3D,KAAL,CAAWU,MAAhB,EAAuB;AAErB,iBAAK,IAAI6C,GAAT,IAAgBf,MAAhB,EAAuB;AACrBmB,cAAAA,IAAI,CAACJ,GAAD,CAAJ,GAAY,EAAZ;AACD;;AACD,YAAA,MAAI,CAAC7B,QAAL,CAAc;AAACb,cAAAA,UAAU,EAAC8C;AAAZ,aAAd;AACD;;AAED,UAAA,MAAI,CAACjC,QAAL,CAAc;AAAEX,YAAAA,gBAAgB,EAAC;AAC7BJ,cAAAA,KAAK,EAAC,IADuB;AAE7BK,cAAAA,KAAK,EAAC,KAFuB;AAG7BC,cAAAA,IAAI;AAHyB;AAAnB,WAAd;AAKD;AACF,OAjBD;AAkBD;;;uCAEkB;AACjB,UAAI2C,IAAI,GAAG,KAAKtD,SAAL,CAAeuD,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAAX;AACA,UAAIvB,IAAI,GAAG,KAAKjC,SAAL,CAAeuD,OAAf,CAAuBtB,IAAlC;AACA,UAAIC,MAAJ;AACA,UAAIrB,MAAM,GAAG,KAAKR,KAAL,CAAWQ,MAAxB;AAEAA,MAAAA,MAAM,CAACoB,IAAD,CAAN,GAAeqB,IAAf;AACA,UAAIG,gBAAgB,GAAG,EAAvB;;AACA,WAAI,IAAIC,KAAR,IAAiB7C,MAAjB,EAAwB;AACtB4C,QAAAA,gBAAgB,CAACnC,IAAjB,CAAsBT,MAAM,CAAC6C,KAAD,CAA5B;AACD;;AAED,WAAKrD,KAAL,CAAWE,UAAX,GAAsB2B,MAAM,GAAI,KAAK7B,KAAL,CAAWE,UAA3C,GAAsD2B,MAAM,GAAC,EAA7D;AACAA,MAAAA,MAAM,CAAC,eAAD,CAAN,GAAgCuB,gBAAhC;AACA1C,MAAAA,OAAO,CAACC,GAAR,CAAYkB,MAAM,CAAC,eAAD,CAAlB,EAAoC,QAApC;AACA,WAAKd,QAAL,CAAc;AACZb,QAAAA,UAAU,EAAE2B;AADA,OAAd;AAGD;;;6BAEQ;AACP,aACE;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,EAAE,EAAC,UAArB;AAAgC,QAAA,GAAG,EAAE,KAAKhC,IAA1C;AAAgD,QAAA,QAAQ,EAAE,KAAKL,YAA/D;AAA6E,QAAA,SAAS,EAAC;AAAvF,SAEI,KAAKQ,KAAL,CAAWI,gBAAX,CAA4BJ,KAA5B,GAAkC,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAKA,KAAL,CAAWI,gBAAX,CAA4BC,KAA7C;AAAoD,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWI,gBAAX,CAA4BE;AAAtF,QAAlC,GAAiI,EAFrI,EAIE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAyB,QAAA,SAAS,EAAC;AAAnC,qBADF,EAGE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,UAAX,CAAsBoD,WAAhE;AAA6E,QAAA,QAAQ,EAAC,UAAtF;AAAiG,QAAA,QAAQ,EAAE,KAAKhE,YAAhH;AAA8H,QAAA,SAAS,EAAC,cAAxI;AAAuJ,QAAA,EAAE,EAAC,SAA1J;AAAoK,QAAA,WAAW,EAAC;AAAhL,QADF,CAHF,CAJF,EAWE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAyB,QAAA,SAAS,EAAC;AAAnC,uBADF,EAGE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,aAAxB;AAAsC,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWE,UAAX,CAAsBqD,KAAnE;AAA0E,QAAA,QAAQ,EAAC,UAAnF;AAA8F,QAAA,QAAQ,EAAE,KAAKjE,YAA7G;AAA2H,QAAA,SAAS,EAAC,cAArI;AAAoJ,QAAA,EAAE,EAAC,SAAvJ;AAAiK,QAAA,WAAW,EAAC;AAA7K,QADF,CAHF,CAXF,EAkBE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAyB,QAAA,SAAS,EAAC;AAAnC,mBADF,EAGE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,IAAI,EAAC,SAA3B;AAAqC,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWE,UAAX,CAAsBoD,WAAlE;AAA+E,QAAA,QAAQ,EAAC,UAAxF;AAAmG,QAAA,QAAQ,EAAE,KAAKhE,YAAlH;AAAgI,QAAA,SAAS,EAAC,cAA1I;AAAyJ,QAAA,EAAE,EAAC,SAA5J;AAAsK,QAAA,WAAW,EAAC;AAAlL,QADF,CAHF,CAlBF,EA6BE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAO,QAAA,SAAS,EAAC;AAAjB,gBADF,EAGE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAC,GAAzB;AAA6B,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWE,UAAX,CAAsBsD,cAA1D;AAA2E,QAAA,QAAQ,EAAE,KAAKlE,YAA1F;AAAwG,QAAA,QAAQ,EAAC,UAAjH;AAA4H,QAAA,IAAI,EAAC,OAAjI;AAAyI,QAAA,SAAS,EAAC;AAAnJ,QADF,CADF,CAHF,CA7BF,EAuCE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAO,QAAA,SAAS,EAAC;AAAjB,iBADF,EAGE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAC,GAAzB;AAA6B,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWE,UAAX,CAAsBsD,cAA1D;AAA2E,QAAA,QAAQ,EAAE,KAAKlE,YAA1F;AAAwG,QAAA,QAAQ,EAAC,UAAjH;AAA4H,QAAA,IAAI,EAAC,OAAjI;AAAyI,QAAA,SAAS,EAAC;AAAnJ,QADF,CADF,CAHF,CAvCF,EAsDE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAyB,QAAA,SAAS,EAAC;AAAnC,2BADF,EAGE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGoB,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWS,eAAvB,EAAuC,YAAvC,CADH,EAEG,KAAKT,KAAL,CAAWS,eAAX,CAA2BgD,GAA3B,CAA+B,UAAUC,GAAV,EAAe;AAC7C,eAAOA,GAAP;AACD,OAFA,CAFH,EAKE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKhE;AAAlD,eALF,CAHF,CAtDF,EAiEE;AAAQ,QAAA,IAAI,EAAC;AAAb,kBAjEF,CADF;AAsED;;;;EAnNuCT,KAAK,CAAC0E,S;;AAsNhD,eAAevE,2BAAf","sourcesContent":["import React from 'react';\r\nimport httpHelper from '../helpers/httpHelper';\r\nimport HelpBlock from '../components/HelpBlock';\r\n\r\n\r\nclass createFarmActivityComponent extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange       = this.handleChange.bind(this);\r\n    this.handleSubmit       = this.handleSubmit.bind(this);\r\n    this.handleFileUpload   = this.handleFileUpload.bind(this);\r\n    this.addThumbnailButton = this.addThumbnailButton.bind(this);\r\n    this.fileInput          = React.createRef();\r\n    this.form               = React.createRef();\r\n\r\n    this.editFarmId = props.farmId;\r\n    this.state ={location:''\r\n    };\r\n\r\n    this.state = {formValues:{status:'1'},\r\n      farmNotification:{\r\n        state:false,\r\n        error:false,\r\n        text:''\r\n      },\r\n      thumbnailCount:1,\r\n      images:{},\r\n      imageThumbnails:[],\r\n      farmId:props.farmId,\r\n    }\r\n\r\n\r\n  }\r\n\r\n  manageImageThumbnail(){\r\n\r\n  }\r\n\r\n  handleImageAdd(){\r\n    console.log(this.state.thumbnailCount ,'count')\r\n    let count = this.sate.thumbnailCount + 1;\r\n    console.log(count,'count')\r\n    let node = <input type=\"file\" className=\"form-control\" multiple=\"multiple\" ref={this.fileInput} onChange={this.handleFileUpload} name={`thumbNail[${this.state.thumbnailCount + 1}]`} id=\"field-file\" placeholder=\"Placeholder\" />;\r\n    this.setState({thumbnailCount:count});\r\n    let prevNode  = this.state.imageThumbnails||[];\r\n      prevNode.push(node);\r\n      return prevNode;\r\n  }\r\n\r\n  addThumbnailButton(e){\r\n    e.preventDefault();\r\n    this.setState({imageThumbnails:this.handleImageAdd(),thumbnailCount:this.state.thumbnailCount++});\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLocations();\r\n    this.getCategories();\r\n    this.setState({imageThumbnails:this.handleImageAdd()});\r\n  }\r\n\r\n  handleChange(event){\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    let values;\r\n    this.state.formValues?values = this.state.formValues:values={};\r\n    values[name] = value;\r\n    this.setState({\r\n      formValues: values\r\n    });\r\n  }\r\n\r\n  getLocations(){\r\n    let htmlLocations = [];\r\n    httpHelper.serverReq('http://localhost:3009/api/v1/farms/activities/create/'+this.state.farmId).then( (locations)=> {\r\n      locations.success.data.forEach((location)=>{\r\n        htmlLocations.push( <option value={location.id} >{location.name}</option>);\r\n      });\r\n      this.setState({location: htmlLocations});\r\n    })\r\n  }\r\n\r\n  getCategories(){\r\n    let htmlCategories = [];\r\n    httpHelper.serverReq('http://localhost:3009/api/v1/farms/categories').then( (categories)=> {\r\n      categories.success.data.forEach((category)=>{\r\n        htmlCategories.push( <option value={category.id} >{category.name}</option>);\r\n      });\r\n      this.setState({categories: htmlCategories});\r\n    })\r\n  }\r\n\r\n  handleSubmit(event){\r\n    event.preventDefault();\r\n    this.setState({btnDisabled:true});\r\n    let values = this.state.formValues;\r\n    let formData = new FormData();\r\n    for (var key in values){\r\n      formData.append(key,values[key])\r\n    }\r\n    this.setState({btnDisabled:false});\r\n\r\n    let url = 'http://localhost:3009/api/v1/farms/activities/create/'+this.state.farmId\r\n\r\n    httpHelper.serverReq(url,formData,'POST').then( (result)=> {\r\n      if (result.success){\r\n        let temp = {};\r\n        if (!this.props.farmId){\r\n\r\n          for (var key in values){\r\n            temp[key] = \"\"\r\n          }\r\n          this.setState({formValues:temp})\r\n        }\r\n\r\n        this.setState({ farmNotification:{\r\n            state:true,\r\n            error:false,\r\n            text:`Activity added successfully`\r\n          }});\r\n      }\r\n    })\r\n  }\r\n\r\n  handleFileUpload() {\r\n    let file = this.fileInput.current.files[0];\r\n    let name = this.fileInput.current.name;\r\n    let values;\r\n    let images = this.state.images;\r\n\r\n    images[name] = file;\r\n    let formValuesImages = [];\r\n    for(var index in images){\r\n      formValuesImages.push(images[index]);\r\n    }\r\n\r\n    this.state.formValues?values  = this.state.formValues:values={};\r\n    values[\"image_updates\"]       = formValuesImages;\r\n    console.log(values[\"image_updates\"],'values');\r\n    this.setState({\r\n      formValues: values\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <form role=\"form\" id=\"farmForm\" ref={this.form} onSubmit={this.handleSubmit} className=\"form-horizontal  form-groups-bordered\">\r\n        {\r\n          this.state.farmNotification.state?<HelpBlock type={this.state.farmNotification.error} text={this.state.farmNotification.text} />:''\r\n        }\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"field-1\" className=\"col-sm-3 control-label\">Activity </label>\r\n\r\n          <div className=\"col-sm-5\">\r\n            <input type=\"text\" name=\"activity\" value={this.state.formValues.description} required=\"required\" onChange={this.handleChange} className=\"form-control\" id=\"field-1\" placeholder=\"Add an Activity\" ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"field-1\" className=\"col-sm-3 control-label\">Information</label>\r\n\r\n          <div className=\"col-sm-5\">\r\n            <input type=\"text\" name=\"information\" value={this.state.formValues.title} required=\"required\" onChange={this.handleChange} className=\"form-control\" id=\"field-1\" placeholder=\"Activity Information\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"field-1\" className=\"col-sm-3 control-label\">Summary</label>\r\n\r\n          <div className=\"col-sm-5\">\r\n            <textarea type=\"text\" name=\"summary\" value={this.state.formValues.description} required=\"required\" onChange={this.handleChange} className=\"form-control\" id=\"field-1\" placeholder=\"Activity Summary\" ></textarea>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"col-sm-3 control-label\">Week</label>\r\n\r\n          <div className=\"col-sm-5\">\r\n            <div className=\"input-group\">\r\n              <input type=\"number\" min=\"0\" value={this.state.formValues.price_per_unit}  onChange={this.handleChange} required=\"required\" name=\"weeks\" className=\"form-control\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"col-sm-3 control-label\">Stage</label>\r\n\r\n          <div className=\"col-sm-5\">\r\n            <div className=\"input-group\">\r\n              <input type=\"number\" min=\"0\" value={this.state.formValues.price_per_unit}  onChange={this.handleChange} required=\"required\" name=\"stage\" className=\"form-control\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"field-1\" className=\"col-sm-3 control-label\">Activity Images</label>\r\n\r\n          <div className=\"col-sm-5\">\r\n            {console.log(this.state.imageThumbnails,\"thumbnails\")}\r\n            {this.state.imageThumbnails.map(function (thu) {\r\n              return thu\r\n            })}\r\n            <button className=\"btn btn-primary\" onClick={this.addThumbnailButton}>Add</button>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default createFarmActivityComponent;\r\n"]},"metadata":{},"sourceType":"module"}