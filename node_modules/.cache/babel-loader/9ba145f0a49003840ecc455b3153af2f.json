{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\easycow\\\\components\\\\loginForm.js\";\nimport React from 'react';\nimport HttpHelper from '../helpers/httpHelper';\nimport FormHelpText from '../components/FormHelpText'; // import {\n//   BrowserRouter as Router,\n//   Route,\n//   Link,\n//   Redirect,\n//   withRouter\n// } from \"react-router-dom\";\n\nimport Router from 'next/router';\n\nvar LogInFormComp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LogInFormComp, _React$Component);\n\n  function LogInFormComp(props) {\n    var _this;\n\n    _classCallCheck(this, LogInFormComp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogInFormComp).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      email: ''\n    };\n    return _this;\n  }\n\n  _createClass(LogInFormComp, [{\n    key: \"helpFormText\",\n    value: function helpFormText() {}\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var formData = new FormData();\n      formData.append('password', this.state.password);\n      formData.append('email', this.state.email);\n      HttpHelper.httpReq('http://localhost:3009/api/v1/login', formData, 'POST').then(function (result) {\n        if (result.message === 'success') {\n          _this2.setState({\n            redirectTo: true\n          });\n\n          return Router.push('/dashboard');\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        id: \"member-registration\",\n        onSubmit: this.handleSubmit,\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"jform_email1-lbl\",\n        htmlFor: \"jform_email1\",\n        className: \"hasPopover required\",\n        title: \"Email Address\",\n        \"data-content\": \"Enter your email address.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Email Address\", React.createElement(\"span\", {\n        className: \"star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"\\xA0*\"))), React.createElement(\"div\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"control-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"jform_password1-lbl\",\n        htmlFor: \"jform_password1\",\n        className: \"hasPopover required\",\n        title: \"Password\",\n        \"data-content\": \"Enter your desired password.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Password\", React.createElement(\"span\", {\n        className: \"star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"\\xA0*\"))), React.createElement(\"div\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"jform_password1\",\n        onChange: this.handleChange,\n        autoComplete: \"off\",\n        className: \"validate-password required\",\n        size: \"30\",\n        value: this.state.password,\n        required: true,\n        \"aria-required\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), this.state.passwordHelpText.state ? React.createElement(FormHelpText, {\n        type: this.state.passwordHelpText.error,\n        text: this.state.passwordHelpText.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }) : '')));\n    }\n  }]);\n\n  return LogInFormComp;\n}(React.Component);\n\nexport default LogInFormComp;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\easycow\\components\\loginForm.js"],"names":["React","HttpHelper","FormHelpText","Router","LogInFormComp","props","handleChange","bind","handleSubmit","state","email","e","target","event","value","type","checked","name","setState","preventDefault","formData","FormData","append","password","httpReq","then","result","message","redirectTo","push","catch","error","console","log","passwordHelpText","text","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport HttpHelper from '../helpers/httpHelper';\r\nimport FormHelpText from '../components/FormHelpText';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Route,\r\n//   Link,\r\n//   Redirect,\r\n//   withRouter\r\n// } from \"react-router-dom\";\r\nimport Router from 'next/router'\r\n\r\nclass LogInFormComp extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = {\r\n      email:''\r\n    }\r\n  }\r\n\r\n  helpFormText(){\r\n\r\n  }\r\n\r\n\r\n  handleChange(e){\r\n\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n\r\n\r\n    let formData = new FormData();\r\n    formData.append('password',this.state.password);\r\n    formData.append('email',this.state.email);\r\n\r\n\r\n    HttpHelper.httpReq('http://localhost:3009/api/v1/login',formData,'POST')\r\n      .then((result)=>{\r\n        if(result.message === 'success'){\r\n          this.setState({redirectTo:true})\r\n          return   Router.push('/dashboard')\r\n        }\r\n      }).catch((error)=>{console.log(error)});\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <form id=\"member-registration\" onSubmit={this.handleSubmit} className=\"form-horizontal\">\r\n        <fieldset>\r\n          <div className=\"control-group\">\r\n            <div className=\"control-label\">\r\n              <label id=\"jform_email1-lbl\" htmlFor=\"jform_email1\" className=\"hasPopover required\"\r\n                     title=\"Email Address\" data-content=\"Enter your email address.\">\r\n                Email Address<span className=\"star\">&#160;*</span></label>\r\n            </div>\r\n            <div className=\"controls\">\r\n\r\n            </div>\r\n           \r\n          </div>\r\n          <div className=\"control-group\">\r\n            <div className=\"control-label\">\r\n              <label id=\"jform_password1-lbl\" htmlFor=\"jform_password1\"\r\n                     className=\"hasPopover required\" title=\"Password\"\r\n                     data-content=\"Enter your desired password.\">\r\n                Password<span className=\"star\">&#160;*</span></label>\r\n            </div>\r\n            <div className=\"controls\">\r\n              <input type=\"password\" name=\"password\" id=\"jform_password1\" onChange={this.handleChange}\r\n                     autoComplete=\"off\" className=\"validate-password required\" size=\"30\"\r\n                     value={this.state.password} required aria-required=\"true\"/></div>\r\n            {\r\n\r\n              this.state.passwordHelpText.state?<FormHelpText type={this.state.passwordHelpText.error} text={this.state.passwordHelpText.text} />:''\r\n            }\r\n          </div>\r\n        </fieldset>\r\n\r\n      </form>\r\n\r\n    );\r\n  }\r\n}\r\nexport  default LogInFormComp;"]},"metadata":{},"sourceType":"module"}