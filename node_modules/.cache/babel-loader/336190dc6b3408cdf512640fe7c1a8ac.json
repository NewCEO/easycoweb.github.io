{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport DashBoardLayOut from '../../layouts/AdminDashboardLayout';\nimport httpHelper from \"../../helpers/httpHelper\";\nimport PayInvestor from \"../../components/payInvestor\";\n\nvar allInvestments =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(allInvestments, _React$Component);\n\n  _createClass(allInvestments, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var req;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req;\n                return _context.abrupt(\"return\", {\n                  farmId: req.params.farmId\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function allInvestments(props) {\n    var _this;\n\n    _classCallCheck(this, allInvestments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(allInvestments).call(this, props));\n    _this.state = {\n      farmDet: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(allInvestments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getInvestors();\n    }\n  }, {\n    key: \"initDataTable\",\n    value: function initDataTable() {\n      jQuery(document).ready(function ($) {\n        var $table3 = jQuery(\"#table-3\");\n        var table3 = $table3.DataTable({\n          \"aLengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n        }); // Initalize Select Dropdown after DataTables is created\n\n        $table3.closest('.dataTables_wrapper').find('select').select2({\n          minimumResultsForSearch: -1\n        }); // Setup - add a text input to each footer cell\n\n        $('#table-3 tfoot th').each(function () {\n          var title = $('#table-3 thead th').eq($(this).index()).text();\n          $(this).html('<input type=\"text\" class=\"form-control\" placeholder=\"Search ' + title + '\" />');\n        }); // Apply the search\n\n        table3.columns().every(function () {\n          var that = this;\n          $('input', this.footer()).on('keyup change', function () {\n            if (that.search() !== this.value) {\n              that.search(this.value).draw();\n            }\n          });\n        });\n      });\n    }\n  }, {\n    key: \"getInvestors\",\n    value: function getInvestors() {\n      var _this2 = this;\n\n      httpHelper.serverReq(\"http://localhost:3009/api/v1/farms/\" + this.props.farmId + \"/investments\").then(function (response) {\n        if (response.success) {\n          _this2.setState({\n            farmDet: response.success.data.farm,\n            investments: response.success.data.investments\n          });\n\n          var investmentRows = _this2.state.investments.map(function (investment) {\n            return React.createElement(\"tr\", null, React.createElement(\"td\", null, new Date(investment.investor_name).toISOString()), React.createElement(\"td\", null, new Date(investment.invested_date).toISOString()), React.createElement(\"td\", null, _this2.calculateMonth(new Date(investment.funding_starts), new Date(investment.funding_ends)), \" Months\"), React.createElement(\"td\", null, _this2.calculatePaymentDate(investment.invested_date, _this2.calculateMonth(new Date(investment.funding_starts), new Date(investment.funding_ends)))), React.createElement(\"td\", null, investment.quantity), React.createElement(\"td\", null, _this2.calculateInvestedAmount(investment.roi, investment.price_per_unit)), React.createElement(\"td\", null, _this2.calculateInvestedAmount(investment.roi, investment.price_per_unit) + investment.quantity), React.createElement(\"td\", null, investment.investment_status), React.createElement(\"td\", null, investment.investment_status_id === status.ripe ? React.createElement(PayInvestor, {\n              investorId: investment.investor_id\n            }) : \"\"));\n          });\n\n          _this2.setState({\n            investmentRows: investmentRows\n          });\n\n          _this2.initDataTable();\n        }\n      });\n    }\n  }, {\n    key: \"calculateMonth\",\n    value: function calculateMonth(d1, d2) {\n      var months;\n      months = (d2.getFullYear() - d1.getFullYear()) * 12;\n      months -= d1.getMonth();\n      months += d2.getMonth();\n      return months <= 0 ? 0 : months;\n    }\n  }, {\n    key: \"calculatePaymentDate\",\n    value: function calculatePaymentDate(investedDate, duration) {\n      var date = new Date(investedDate);\n      date.setMonth(new Date(investedDate).getMonth() + duration);\n      return date.toISOString();\n    }\n  }, {\n    key: \"calculateInvestedAmount\",\n    value: function calculateInvestedAmount(roi, pricePerUnit) {\n      return roi * pricePerUnit / 100;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DashBoardLayOut, null, React.createElement(\"hr\", null), React.createElement(\"br\", null), React.createElement(\"table\", {\n        className: \"table table-bordered datatable\",\n        id: \"table-3\"\n      }, React.createElement(\"thead\", null, React.createElement(\"tr\", {\n        className: \"replace-inputs\"\n      }, React.createElement(\"th\", null, \"Investor's Name\"), React.createElement(\"th\", null, \"Invested Date\"), React.createElement(\"th\", null, \"Investment Duration\"), React.createElement(\"th\", null, \"Due Date\"), React.createElement(\"th\", null, \"Total Units Bought\"), React.createElement(\"th\", null, \"Total Amount Paid\"), React.createElement(\"th\", null, \"Total Returnable Amount\"), React.createElement(\"th\", null, \"Status\"), React.createElement(\"th\", null, \"Action\"))), React.createElement(\"tbody\", null, this.state.investmentRows), React.createElement(\"tfoot\", null, React.createElement(\"tr\", null, React.createElement(\"th\", null, \"Investor's Name\"), React.createElement(\"th\", null, \"Invested Date\"), React.createElement(\"th\", null, \"Due Date\"), React.createElement(\"th\", null, \"Total Units Bought\"), React.createElement(\"th\", null, \"Total Amount Paid\"), React.createElement(\"th\", null, \"Total Returnable Amount\"), React.createElement(\"th\", null, \"Status\"), React.createElement(\"th\", null, \"Action\")))), React.createElement(\"br\", null), React.createElement(\"br\", null));\n    }\n  }]);\n\n  return allInvestments;\n}(React.Component);\n\nexport default allInvestments;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\easycow\\pages\\admin\\all-investments.js"],"names":["React","DashBoardLayOut","httpHelper","PayInvestor","allInvestments","req","farmId","params","props","state","farmDet","getInvestors","jQuery","document","ready","$","$table3","table3","DataTable","closest","find","select2","minimumResultsForSearch","each","title","eq","index","text","html","columns","every","that","footer","on","search","value","draw","serverReq","then","response","success","setState","data","farm","investments","investmentRows","map","investment","Date","investor_name","toISOString","invested_date","calculateMonth","funding_starts","funding_ends","calculatePaymentDate","quantity","calculateInvestedAmount","roi","price_per_unit","investment_status","investment_status_id","status","ripe","investor_id","initDataTable","d1","d2","months","getFullYear","getMonth","investedDate","duration","date","setMonth","pricePerUnit","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport DashBoardLayOut from '../../layouts/AdminDashboardLayout';\r\nimport httpHelper from \"../../helpers/httpHelper\";\r\nimport PayInvestor from \"../../components/payInvestor\"\r\n\r\nclass allInvestments extends React.Component{\r\n\r\n  static async getInitialProps({ req }) {\r\n    return {farmId:req.params.farmId};\r\n  }\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {farmDet:\"\"}\r\n  }\r\n  componentDidMount() {\r\n    this.getInvestors();\r\n  }\r\n\r\n  initDataTable(){\r\n    jQuery(document).ready(function($) {\r\n      var $table3 = jQuery(\"#table-3\");\r\n\r\n      var table3 = $table3.DataTable({\r\n        \"aLengthMenu\": [\r\n          [10, 25, 50, -1],\r\n          [10, 25, 50, \"All\"]\r\n        ]\r\n      });\r\n\r\n      // Initalize Select Dropdown after DataTables is created\r\n      $table3.closest('.dataTables_wrapper').find('select').select2({\r\n        minimumResultsForSearch: -1\r\n      });\r\n\r\n      // Setup - add a text input to each footer cell\r\n      $('#table-3 tfoot th').each(function() {\r\n        var title = $('#table-3 thead th').eq($(this).index()).text();\r\n        $(this).html('<input type=\"text\" class=\"form-control\" placeholder=\"Search ' + title + '\" />');\r\n      });\r\n\r\n      // Apply the search\r\n      table3.columns().every(function() {\r\n        var that = this;\r\n\r\n        $('input', this.footer()).on('keyup change', function() {\r\n          if (that.search() !== this.value) {\r\n            that\r\n              .search(this.value)\r\n              .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  getInvestors(){\r\n    httpHelper.serverReq(\"http://localhost:3009/api/v1/farms/\"+this.props.farmId+\"/investments\").then( (response)=> {\r\n      if (response.success){\r\n        this.setState({farmDet:response.success.data.farm,investments:response.success.data.investments});\r\n\r\n      let investmentRows =  this.state.investments.map((investment)=>{\r\n          return <tr>\r\n                    <td>{new Date(investment.investor_name).toISOString()}</td>\r\n                    <td>{new Date(investment.invested_date).toISOString()}</td>\r\n                    <td>{this.calculateMonth(new Date(investment.funding_starts),new Date(investment.funding_ends))} Months</td>\r\n                    <td>{this.calculatePaymentDate(investment.invested_date,this.calculateMonth(new Date(investment.funding_starts),new Date(investment.funding_ends)))}</td>\r\n                    <td>{investment.quantity}</td>\r\n                     <td>{this.calculateInvestedAmount(investment.roi,investment.price_per_unit) }</td>\r\n                    <td>{this.calculateInvestedAmount(investment.roi,investment.price_per_unit) + investment.quantity}</td>\r\n                    <td>{investment.investment_status}</td>\r\n                    <td>{\r\n                          investment.investment_status_id === status.ripe?<PayInvestor investorId={investment.investor_id}/>:\"\"\r\n                        }\r\n                    </td>\r\n                </tr>\r\n        })\r\n        this.setState({investmentRows:investmentRows});\r\n        this.initDataTable();\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  calculateMonth(d1,d2){\r\n    var months;\r\n    months = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n    months -= d1.getMonth();\r\n    months += d2.getMonth();\r\n    return months <= 0 ? 0 : months;\r\n  }\r\n\r\n  calculatePaymentDate(investedDate,duration){\r\n\r\n    let date = new Date(investedDate);\r\n    date.setMonth(new Date(investedDate).getMonth() + duration);\r\n    return  date.toISOString();\r\n\r\n  }\r\n\r\n  calculateInvestedAmount(roi,pricePerUnit){\r\n\r\n   return (roi * pricePerUnit)/100;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return(\r\n      <DashBoardLayOut>\r\n\r\n        <hr/>\r\n\r\n\r\n        <br/>\r\n\r\n\r\n        <table className=\"table table-bordered datatable\" id=\"table-3\">\r\n          <thead>\r\n          <tr className=\"replace-inputs\">\r\n            <th>Investor's Name</th>\r\n            <th>Invested Date</th>\r\n            <th>Investment Duration</th>\r\n            <th>Due Date</th>\r\n            <th>Total Units Bought</th>\r\n            <th>Total Amount Paid</th>\r\n            <th>Total Returnable Amount</th>\r\n            <th>Status</th>\r\n            <th>Action</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n          {this.state.investmentRows}\r\n          </tbody>\r\n          <tfoot>\r\n          <tr>\r\n            <th>Investor's Name</th>\r\n            <th>Invested Date</th>\r\n            <th>Due Date</th>\r\n            <th>Total Units Bought</th>\r\n            <th>Total Amount Paid</th>\r\n            <th>Total Returnable Amount</th>\r\n            <th>Status</th>\r\n            <th>Action</th>\r\n          </tr>\r\n          </tfoot>\r\n        </table>\r\n\r\n\r\n        <br/>\r\n        <br/>\r\n      </DashBoardLayOut>\r\n    )\r\n  }\r\n}\r\n\r\nexport default allInvestments;\r\n"]},"metadata":{},"sourceType":"module"}