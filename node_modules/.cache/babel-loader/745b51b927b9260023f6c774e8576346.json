{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport HttpHelper from '../helpers/httpHelper';\nimport userTypes from \"../config/userTypes\";\nimport HelpBlock from '../components/HelpBlock';\nimport Router from 'next/router';\n\nvar LogInFormComp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LogInFormComp, _React$Component);\n\n  function LogInFormComp(props) {\n    var _this;\n\n    _classCallCheck(this, LogInFormComp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogInFormComp).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      email: '',\n      redirect: false,\n      loginHelpBlock: {\n        state: false,\n        error: false,\n        text: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(LogInFormComp, [{\n    key: \"helpFormText\",\n    value: function helpFormText() {}\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      this.setState({\n        loginHelpBlock: {\n          state: false,\n          error: false,\n          text: ''\n        }\n      });\n      var formData = new FormData();\n      formData.append('password', this.state.password);\n      formData.append('email', this.state.email);\n      HttpHelper.httpReq('login', formData, 'POST').then(function (result) {\n        if (result.success) {\n          _this2.setState({\n            loginHelpBlock: {\n              state: true,\n              error: false,\n              text: 'Login Successful'\n            }\n          });\n\n          if (result.success.data.userDet.user_type === userTypes.admin || result.success.data.userDet.user_type === userTypes.superAdmin) {\n            Router.push('/admin/dashboard');\n          } else if (result.success.data.userDet.user_type === userTypes.regular) {\n            Router.push('/user/dashboard');\n          }\n        } else {\n          _this2.setState({\n            loginHelpBlock: {\n              state: true,\n              error: true,\n              text: 'The Email  or Password is Incorrect'\n            }\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        action: \"#\",\n        onSubmit: this.handleSubmit,\n        className: \"donate-form default-form me\"\n      }, this.state.loginHelpBlock.state ? React.createElement(HelpBlock, {\n        type: this.state.loginHelpBlock.error,\n        text: this.state.loginHelpBlock.text\n      }) : '', React.createElement(\"div\", {\n        className: \"form-bg\"\n      }, React.createElement(\"div\", {\n        className: \"row clearfix\"\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-6 col-sm-12\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"p\", null, \"Email*\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        onChange: this.handleChange,\n        className: \"validate-email required\",\n        id: \"jform_email1\",\n        size: \"30\",\n        value: this.state.email,\n        autoComplete: \"email\",\n        required: true,\n        \"aria-required\": \"true\"\n      }))), React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-6 col-sm-12\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"p\", null, \"Password*\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"jform_password1\",\n        onChange: this.handleChange,\n        autoComplete: \"off\",\n        className: \"validate-password required\",\n        size: \"30\",\n        value: this.state.password,\n        required: true,\n        \"aria-required\": \"true\"\n      }))))), React.createElement(\"div\", {\n        className: \"center text-center me\"\n      }, React.createElement(\"button\", {\n        className: \"theme-btn\",\n        type: \"submit\"\n      }, \"Login\")));\n    }\n  }]);\n\n  return LogInFormComp;\n}(React.Component);\n\nexport default LogInFormComp;","map":{"version":3,"sources":["/home/darnyelx/Projects/easycow/components/loginForm.js"],"names":["React","HttpHelper","userTypes","HelpBlock","Router","LogInFormComp","props","handleChange","bind","handleSubmit","state","email","redirect","loginHelpBlock","error","text","e","target","event","value","type","checked","name","setState","preventDefault","formData","FormData","append","password","httpReq","then","result","success","data","userDet","user_type","admin","superAdmin","push","regular","catch","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport HttpHelper from '../helpers/httpHelper';\nimport userTypes     from \"../config/userTypes\";\nimport HelpBlock  from '../components/HelpBlock';\n\nimport Router from 'next/router'\n\nclass LogInFormComp extends React.Component{\n  constructor(props){\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      email:'',\n      redirect:false,\n      loginHelpBlock:{\n        state:false,\n        error:false,\n        text:''\n      },\n    }\n\n  }\n\n  helpFormText(){\n\n  }\n\n\n  handleChange(e){\n\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    this.setState({ loginHelpBlock:{\n        state:false,\n        error:false,\n        text:''\n      }});\n\n    let formData = new FormData();\n    formData.append('password',this.state.password);\n    formData.append('email',this.state.email);\n\n\n    HttpHelper.httpReq('login',formData,'POST')\n      .then((result)=>{\n        if(result.success){\n\n          this.setState({ loginHelpBlock:{\n              state:true,\n              error:false,\n              text:'Login Successful'\n            }});\n          if (result.success.data.userDet.user_type === userTypes.admin || result.success.data.userDet.user_type === userTypes.superAdmin) {\n            Router.push('/admin/dashboard')\n          }else if(result.success.data.userDet.user_type === userTypes.regular){\n            Router.push('/user/dashboard')\n          }\n\n        }else{\n          this.setState({ loginHelpBlock:{\n              state:true,\n              error:true,\n              text:'The Email  or Password is Incorrect'\n            }});\n        }\n      }).catch((error)=>{console.log(error)});\n\n  }\n\n\n  render() {\n\n    return (\n\n      <form action=\"#\"  onSubmit={this.handleSubmit} className=\"donate-form default-form me\">\n        {\n\n          this.state.loginHelpBlock.state?<HelpBlock type={this.state.loginHelpBlock.error} text={this.state.loginHelpBlock.text} />:''\n        }\n        <div className=\"form-bg\">\n          <div className=\"row clearfix\">\n            <div className=\"col-lg-12 col-md-6 col-sm-12\">\n              <div className=\"form-group\">\n                <p>Email*</p>\n                <input type=\"email\" name=\"email\" onChange={this.handleChange} className=\"validate-email required\"\n                       id=\"jform_email1\"  size=\"30\" value={this.state.email} autoComplete=\"email\" required\n                       aria-required=\"true\"/>\n              </div>\n            </div>\n            <div className=\"col-lg-12 col-md-6 col-sm-12\">\n              <div className=\"form-group\">\n                <p>Password*</p>\n                <input type=\"password\" name=\"password\" id=\"jform_password1\" onChange={this.handleChange}\n                       autoComplete=\"off\" className=\"validate-password required\" size=\"30\"\n                       value={this.state.password} required aria-required=\"true\"/></div>\n              </div>\n              \n            </div>\n          </div>\n          <div className=\"center text-center me\">\n          <button className=\"theme-btn\" type=\"submit\">Login</button>\n        </div>\n      </form>\n\n    );\n  }\n}\nexport  default LogInFormComp;"]},"metadata":{},"sourceType":"module"}