{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport httpHelper from '../helpers/httpHelper';\nimport HelpBlock from '../components/HelpBlock';\nimport isAdmin from \"../middlewares/isAdmin\";\nimport Link from 'next/link';\n\nvar allFarmTableComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(allFarmTableComponent, _React$Component);\n\n  function allFarmTableComponent(props) {\n    var _this;\n\n    _classCallCheck(this, allFarmTableComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(allFarmTableComponent).call(this, props));\n    _this.state = {\n      allFarms: []\n    };\n    return _this;\n  }\n\n  _createClass(allFarmTableComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      isAdmin();\n      this.getFarmsData();\n    }\n  }, {\n    key: \"calculateMonth\",\n    value: function calculateMonth(d1, d2) {\n      var months;\n      months = (d2.getFullYear() - d1.getFullYear()) * 12;\n      months -= d1.getMonth();\n      months += d2.getMonth();\n      console.log(months, months);\n      return months <= 0 ? 0 : months;\n    }\n  }, {\n    key: \"initDataTable\",\n    value: function initDataTable() {\n      jQuery(document).ready(function ($) {\n        var $table3 = jQuery(\"#table-3\");\n        var table3 = $table3.DataTable({\n          \"aLengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n        }); // Initalize Select Dropdown after DataTables is created\n\n        $table3.closest('.dataTables_wrapper').find('select').select2({\n          minimumResultsForSearch: -1\n        }); // Setup - add a text input to each footer cell\n\n        $('#table-3 tfoot th').each(function () {\n          var title = $('#table-3 thead th').eq($(this).index()).text();\n          $(this).html('<input type=\"text\" class=\"form-control\" placeholder=\"Search ' + title + '\" />');\n        }); // Apply the search\n\n        table3.columns().every(function () {\n          var that = this;\n          $('input', this.footer()).on('keyup change', function () {\n            if (that.search() !== this.value) {\n              that.search(this.value).draw();\n            }\n          });\n        });\n      });\n    }\n  }, {\n    key: \"getFarmsData\",\n    value: function getFarmsData() {\n      var _this2 = this;\n\n      httpHelper.serverReq('http://localhost:3009/api/v1/farms/all').then(function (data) {\n        console.log(data);\n\n        if (data.success) {\n          var farms = data.success.data;\n          var editedFarms = farms.map(function (farm) {\n            return React.createElement(\"tr\", {\n              className: \"odd gradeX\"\n            }, React.createElement(\"td\", null, farm.title), React.createElement(\"td\", null, _this2.calculateMonth(new Date(farm.farm_starts), new Date(farm.farm_ends)), \" Months\"), React.createElement(\"td\", null, farm.price_per_unit), React.createElement(\"td\", {\n              className: \"center\"\n            }, farm.roi, \"%\"), React.createElement(\"td\", {\n              className: \"center\"\n            }, farm.total_units), React.createElement(\"td\", {\n              className: \"center\"\n            }, farm.sold_out || 0), React.createElement(\"td\", {\n              className: \"center\"\n            }, farm.status_name), React.createElement(\"td\", null, React.createElement(Link, {\n              href: \"/admin/farms/\" + farm.id.toString()\n            }, React.createElement(\"button\", {\n              type: \"button\",\n              className: \"btn btn-success\"\n            }, \"view\")), React.createElement(Link, {\n              href: \"/admin/farms/edit/\" + farm.id.toString()\n            }, React.createElement(\"button\", {\n              type: \"button\",\n              className: \"btn btn-info\"\n            }, \"edit\")), React.createElement(Link, {\n              href: \"/admin/farms/\" + farm.id.toString()\n            }, React.createElement(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\"\n            }, \"delete\"))));\n          });\n\n          _this2.setState({\n            allFarms: editedFarms\n          });\n\n          _this2.initDataTable();\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"table\", {\n        className: \"table table-bordered datatable\",\n        id: \"table-3\"\n      }, React.createElement(\"thead\", null, React.createElement(\"tr\", {\n        className: \"replace-inputs\"\n      }, React.createElement(\"th\", null, \"Farm Name\"), React.createElement(\"th\", null, \"Duration\"), React.createElement(\"th\", null, \"Price\"), React.createElement(\"th\", null, \"Interest\"), React.createElement(\"th\", null, \"Total Units Available\"), React.createElement(\"th\", null, \"Total Units Bought\"), React.createElement(\"th\", null, \"Status\"), React.createElement(\"th\", null, \"Action\"))), React.createElement(\"tbody\", null, this.state.allFarms), React.createElement(\"tfoot\", null, React.createElement(\"tr\", null, React.createElement(\"th\", null, \"Farm Name\"), React.createElement(\"th\", null, \"Duration\"), React.createElement(\"th\", null, \"Price\"), React.createElement(\"th\", null, \"Returns Percentage\"), React.createElement(\"th\", null, \"Units Available\"), React.createElement(\"th\", null, \"Units Bought\"), React.createElement(\"th\", null, \"Actions\"))));\n    }\n  }]);\n\n  return allFarmTableComponent;\n}(React.Component);\n\nexport default allFarmTableComponent;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\easycow\\components\\allFarms.js"],"names":["React","httpHelper","HelpBlock","isAdmin","Link","allFarmTableComponent","props","state","allFarms","getFarmsData","d1","d2","months","getFullYear","getMonth","console","log","jQuery","document","ready","$","$table3","table3","DataTable","closest","find","select2","minimumResultsForSearch","each","title","eq","index","text","html","columns","every","that","footer","on","search","value","draw","serverReq","then","data","success","farms","editedFarms","map","farm","calculateMonth","Date","farm_starts","farm_ends","price_per_unit","roi","total_units","sold_out","status_name","id","toString","setState","initDataTable","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport httpHelper from '../helpers/httpHelper';\r\nimport HelpBlock from '../components/HelpBlock';\r\nimport isAdmin from \"../middlewares/isAdmin\";\r\nimport Link from 'next/link';\r\n\r\n\r\nclass allFarmTableComponent extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state ={allFarms:[]\r\n    };\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    isAdmin();\r\n    this.getFarmsData();\r\n\r\n  }\r\n  calculateMonth(d1,d2){\r\n    var months;\r\n    months = (d2.getFullYear() - d1.getFullYear()) * 12;\r\n    months -= d1.getMonth();\r\n    months += d2.getMonth();\r\n    console.log(months,months);\r\n    return months <= 0 ? 0 : months;\r\n  }\r\n  initDataTable(){\r\n    jQuery(document).ready(function($) {\r\n      var $table3 = jQuery(\"#table-3\");\r\n\r\n      var table3 = $table3.DataTable({\r\n        \"aLengthMenu\": [\r\n          [10, 25, 50, -1],\r\n          [10, 25, 50, \"All\"]\r\n        ]\r\n      });\r\n\r\n      // Initalize Select Dropdown after DataTables is created\r\n      $table3.closest('.dataTables_wrapper').find('select').select2({\r\n        minimumResultsForSearch: -1\r\n      });\r\n\r\n      // Setup - add a text input to each footer cell\r\n      $('#table-3 tfoot th').each(function() {\r\n        var title = $('#table-3 thead th').eq($(this).index()).text();\r\n        $(this).html('<input type=\"text\" class=\"form-control\" placeholder=\"Search ' + title + '\" />');\r\n      });\r\n\r\n      // Apply the search\r\n      table3.columns().every(function() {\r\n        var that = this;\r\n\r\n        $('input', this.footer()).on('keyup change', function() {\r\n          if (that.search() !== this.value) {\r\n            that\r\n              .search(this.value)\r\n              .draw();\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n  getFarmsData(){\r\n    httpHelper.serverReq('http://localhost:3009/api/v1/farms/all').then( (data)=> {\r\n      console.log(data);\r\n      if (data.success){\r\n        let farms = data.success.data;\r\n        let editedFarms =  farms.map(farm=>\r\n          <tr className=\"odd gradeX\">\r\n            <td>{farm.title}</td>\r\n            <td>{this.calculateMonth( new Date(farm.farm_starts),new Date(farm.farm_ends))} Months</td>\r\n            <td>{farm.price_per_unit}</td>\r\n            <td className=\"center\">{farm.roi}%</td>\r\n            <td className=\"center\">{farm.total_units}</td>\r\n            <td className=\"center\">{farm.sold_out||0}</td>\r\n            <td className=\"center\">{farm.status_name}</td>\r\n            <td>\r\n              <Link href= {\"/admin/farms/\"+farm.id.toString()}>\r\n                <button type=\"button\" className=\"btn btn-success\">view</button>\r\n              </Link>\r\n              <Link href= {\"/admin/farms/edit/\"+farm.id.toString()}>\r\n                <button type=\"button\" className=\"btn btn-info\">edit</button>\r\n              </Link>\r\n              <Link href= {\"/admin/farms/\"+farm.id.toString()}>\r\n                <button type=\"button\" className=\"btn btn-danger\">delete</button>\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n        );\r\n        this.setState({allFarms : editedFarms});\r\n        this.initDataTable();\r\n\r\n      }\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <table className=\"table table-bordered datatable\" id=\"table-3\">\r\n        <thead>\r\n        <tr className=\"replace-inputs\">\r\n          <th>Farm Name</th>\r\n          <th>Duration</th>\r\n          <th>Price</th>\r\n          <th>Interest</th>\r\n          <th>Total Units Available</th>\r\n          <th>Total Units Bought</th>\r\n          <th>Status</th>\r\n          <th>Action</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n        {this.state.allFarms}\r\n        </tbody>\r\n        <tfoot>\r\n        <tr>\r\n          <th>Farm Name</th>\r\n          <th>Duration</th>\r\n          <th>Price</th>\r\n          <th>Returns Percentage</th>\r\n          <th>Units Available</th>\r\n          <th>Units Bought</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n        </tfoot>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default allFarmTableComponent;\r\n"]},"metadata":{},"sourceType":"module"}