{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport HttpHelper from '../helpers/httpHelper';\nimport HelpBlock from '../components/HelpBlock';\nimport Router from 'next/router';\n\nvar LogInFormComp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LogInFormComp, _React$Component);\n\n  function LogInFormComp(props) {\n    var _this;\n\n    _classCallCheck(this, LogInFormComp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogInFormComp).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      email: '',\n      redirect: false,\n      loginHelpBlock: {\n        state: false,\n        error: false,\n        text: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(LogInFormComp, [{\n    key: \"helpFormText\",\n    value: function helpFormText() {}\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      this.setState({\n        loginHelpBlock: {\n          state: false,\n          error: false,\n          text: ''\n        }\n      });\n      var formData = new FormData();\n      formData.append('password', this.state.password);\n      formData.append('email', this.state.email);\n      HttpHelper.httpReq('http://localhost:3009/api/v1/login', formData, 'POST').then(function (result) {\n        if (result.success.data.validation === true) {\n          _this2.setState({\n            loginHelpBlock: {\n              state: true,\n              error: false,\n              text: 'Login Successful'\n            }\n          });\n\n          return Router.push('/user/dashboard');\n        } else {\n          _this2.setState({\n            loginHelpBlock: {\n              state: true,\n              error: true,\n              text: 'The Email  or Password is Incorrect'\n            }\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        id: \"member-registration\",\n        onSubmit: this.handleSubmit,\n        className: \"form-horizontal\"\n      }, this.state.loginHelpBlock.state ? React.createElement(HelpBlock, {\n        type: this.state.loginHelpBlock.error,\n        text: this.state.loginHelpBlock.text\n      }) : '', React.createElement(\"fieldset\", null, React.createElement(\"div\", {\n        className: \"control-group\"\n      }, React.createElement(\"div\", {\n        className: \"control-label\"\n      }, React.createElement(\"label\", {\n        id: \"jform_email1-lbl\",\n        htmlFor: \"jform_email1\",\n        className: \"hasPopover required\",\n        title: \"Email Address\",\n        \"data-content\": \"Enter your email address.\"\n      }, \"Email Address\", React.createElement(\"span\", {\n        className: \"star\"\n      }, \"\\xA0*\"))), React.createElement(\"div\", {\n        className: \"controls\"\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        onChange: this.handleChange,\n        className: \"validate-email required\",\n        id: \"jform_email1\",\n        size: \"30\",\n        value: this.state.email,\n        autoComplete: \"email\",\n        required: true,\n        \"aria-required\": \"true\"\n      }))), React.createElement(\"div\", {\n        className: \"control-group\"\n      }, React.createElement(\"div\", {\n        className: \"control-label\"\n      }, React.createElement(\"label\", {\n        id: \"jform_password1-lbl\",\n        htmlFor: \"jform_password1\",\n        className: \"hasPopover required\",\n        title: \"Password\",\n        \"data-content\": \"Enter your desired password.\"\n      }, \"Password\", React.createElement(\"span\", {\n        className: \"star\"\n      }, \"\\xA0*\"))), React.createElement(\"div\", {\n        className: \"controls\"\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"jform_password1\",\n        onChange: this.handleChange,\n        autoComplete: \"off\",\n        className: \"validate-password required\",\n        size: \"30\",\n        value: this.state.password,\n        required: true,\n        \"aria-required\": \"true\"\n      })))), React.createElement(\"div\", {\n        className: \"controls col-sm-12\"\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\"\n      }, \"Login\"), React.createElement(\"p\", null, \"Don't have an account?\", React.createElement(\"br\", null)), React.createElement(\"div\", {\n        className: \"mod-menu mod-menu__social\"\n      }, React.createElement(\"ul\", {\n        className: \"nav menu social\"\n      }, React.createElement(\"li\", {\n        className: \"item-148\"\n      }, React.createElement(\"a\", {\n        className: \"\",\n        href: \"#\",\n        title: \"Facebook\"\n      }, React.createElement(\"img\", {\n        src: \"../images/fb-button.png\",\n        alt: \"fb-button\",\n        height: \"500\",\n        width: \"200\"\n      }))), React.createElement(\"li\", {\n        className: \"item-149\"\n      }, React.createElement(\"a\", {\n        className: \"\",\n        href: \"#\",\n        title: \"Google\"\n      }, React.createElement(\"img\", {\n        src: \"../images/google_signin_buttons/web/2x/btn_google_signin_light_focus_web@2x.png\",\n        alt: \"g-button\",\n        height: \"200\",\n        width: \"200\"\n      })))))));\n    }\n  }]);\n\n  return LogInFormComp;\n}(React.Component);\n\nexport default LogInFormComp;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\easycow\\components\\loginForm.js"],"names":["React","HttpHelper","HelpBlock","Router","LogInFormComp","props","handleChange","bind","handleSubmit","state","email","redirect","loginHelpBlock","error","text","e","target","event","value","type","checked","name","setState","preventDefault","formData","FormData","append","password","httpReq","then","result","success","data","validation","push","catch","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport HttpHelper from '../helpers/httpHelper';\r\nimport HelpBlock from '../components/HelpBlock';\r\n\r\nimport Router from 'next/router'\r\n\r\nclass LogInFormComp extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = {\r\n      email:'',\r\n      redirect:false,\r\n      loginHelpBlock:{\r\n        state:false,\r\n        error:false,\r\n        text:''\r\n      },\r\n    }\r\n\r\n  }\r\n\r\n  helpFormText(){\r\n\r\n  }\r\n\r\n\r\n  handleChange(e){\r\n\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n    this.setState({ loginHelpBlock:{\r\n        state:false,\r\n        error:false,\r\n        text:''\r\n      }});\r\n\r\n    let formData = new FormData();\r\n    formData.append('password',this.state.password);\r\n    formData.append('email',this.state.email);\r\n\r\n\r\n    HttpHelper.httpReq('http://localhost:3009/api/v1/login',formData,'POST')\r\n      .then((result)=>{\r\n        if(result.success.data.validation === true){\r\n\r\n          this.setState({ loginHelpBlock:{\r\n              state:true,\r\n              error:false,\r\n              text:'Login Successful'\r\n            }});\r\n          return   Router.push('/user/dashboard')\r\n        }else{\r\n          this.setState({ loginHelpBlock:{\r\n              state:true,\r\n              error:true,\r\n              text:'The Email  or Password is Incorrect'\r\n            }});\r\n        }\r\n      }).catch((error)=>{console.log(error)});\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <form id=\"member-registration\" onSubmit={this.handleSubmit} className=\"form-horizontal\">\r\n        {\r\n\r\n          this.state.loginHelpBlock.state?<HelpBlock type={this.state.loginHelpBlock.error} text={this.state.loginHelpBlock.text} />:''\r\n        }\r\n        <fieldset>\r\n          <div className=\"control-group\">\r\n            <div className=\"control-label\">\r\n              <label id=\"jform_email1-lbl\" htmlFor=\"jform_email1\" className=\"hasPopover required\"\r\n                     title=\"Email Address\" data-content=\"Enter your email address.\">\r\n                Email Address<span className=\"star\">&#160;*</span></label>\r\n            </div>\r\n            <div className=\"controls\">\r\n              <input type=\"email\" name=\"email\" onChange={this.handleChange} className=\"validate-email required\"\r\n                     id=\"jform_email1\"  size=\"30\" value={this.state.email} autoComplete=\"email\" required\r\n                     aria-required=\"true\"/>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"control-group\">\r\n            <div className=\"control-label\">\r\n              <label id=\"jform_password1-lbl\" htmlFor=\"jform_password1\"\r\n                     className=\"hasPopover required\" title=\"Password\"\r\n                     data-content=\"Enter your desired password.\">\r\n                Password<span className=\"star\">&#160;*</span></label>\r\n            </div>\r\n            <div className=\"controls\">\r\n              <input type=\"password\" name=\"password\" id=\"jform_password1\" onChange={this.handleChange}\r\n                     autoComplete=\"off\" className=\"validate-password required\" size=\"30\"\r\n                     value={this.state.password} required aria-required=\"true\"/></div>\r\n\r\n          </div>\r\n        </fieldset>\r\n        <div className=\"controls col-sm-12\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n\r\n          <p>Don't have an account?<br /></p>\r\n          <div className=\"mod-menu mod-menu__social\">\r\n            <ul className=\"nav menu social\">\r\n              <li className=\"item-148\"><a className=\"\" href=\"#\" title=\"Facebook\"><img\r\n                src=\"../images/fb-button.png\" alt=\"fb-button\" height=\"500\" width=\"200\" /></a>\r\n              </li>\r\n              <li className=\"item-149\"><a className=\"\" href=\"#\" title=\"Google\"><img\r\n                src=\"../images/google_signin_buttons/web/2x/btn_google_signin_light_focus_web@2x.png\"\r\n                alt=\"g-button\" height=\"200\" width=\"200\" /></a>\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n    );\r\n  }\r\n}\r\nexport  default LogInFormComp;"]},"metadata":{},"sourceType":"module"}