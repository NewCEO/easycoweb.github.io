{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\easycow\\\\components\\\\signupForm.js\";\nimport React from 'react';\nimport HttpHelper from '../helpers/httpHelper';\nimport FormHelpText from '../components/FormHelpText';\n\nvar SignUpFormComp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignUpFormComp, _React$Component);\n\n  function SignUpFormComp(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpFormComp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUpFormComp).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      name: '',\n      emailHelpText: {\n        state: false,\n        error: false,\n        text: ''\n      },\n      passwordHelpText: {\n        state: false,\n        error: false,\n        text: ''\n      },\n      confirmPasswordHelpText: {\n        state: false,\n        error: false,\n        text: ''\n      },\n      nameHelpText: {\n        state: false,\n        error: false,\n        text: ''\n      },\n      TOSHelpText: {\n        state: false,\n        error: false,\n        text: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(SignUpFormComp, [{\n    key: \"helpFormText\",\n    value: function helpFormText() {}\n  }, {\n    key: \"validateName\",\n    value: function validateName(input) {\n      if (input.trim() === '') {\n        this.setState({\n          nameHelpText: {\n            state: true,\n            error: true,\n            text: 'Name is required'\n          }\n        });\n        return false;\n      } else {\n        this.setState({\n          nameHelpText: {\n            state: false,\n            error: false,\n            text: 'Name is required'\n          }\n        });\n        return true;\n      }\n    }\n  }, {\n    key: \"validatePassword\",\n    value: function validatePassword(password) {\n      if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/.test(password)) {\n        this.setState({\n          passwordHelpText: {\n            state: true,\n            error: true,\n            text: 'Password must be more than length of atleast 8  and contain a lower case , uppercase character and numerical character'\n          }\n        });\n        return false;\n      } else {\n        this.setState({\n          passwordHelpText: {\n            state: true,\n            error: false,\n            text: 'Password OK'\n          }\n        });\n        return true;\n      }\n    }\n  }, {\n    key: \"validateConfPassword\",\n    value: function validateConfPassword(confPassword, password) {\n      if (password !== confPassword) {\n        this.setState({\n          confirmPasswordHelpText: {\n            state: true,\n            error: true,\n            text: 'Passwords do not match'\n          }\n        });\n        return false;\n      } else {\n        this.setState({\n          confirmPasswordHelpText: {\n            state: true,\n            error: false,\n            text: 'Passwords matches'\n          }\n        });\n        return true;\n      }\n    }\n  }, {\n    key: \"validateEmail\",\n    value: function validateEmail(email) {\n      var _this2 = this;\n\n      HttpHelper.httpReq('http://localhost:3009/api/v1/email/exists?email=' + email, '', 'GET').then(function (result) {\n        if (result.status === true) {\n          _this2.setState({\n            emailHelpText: {\n              state: true,\n              error: true,\n              text: 'Email already exist'\n            }\n          });\n        } else {\n          _this2.setState({\n            emailHelpText: {\n              state: false,\n              error: false,\n              text: ' '\n            }\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n\n      switch (target.name) {\n        case 'name':\n          this.validateName(target.value);\n          break;\n\n        case 'password':\n          this.validatePassword(target.value);\n          this.validateConfPassword(target.value, this.state.confirmPassword);\n          break;\n\n        case 'confirmPassword':\n          this.validateConfPassword(target.value, this.state.password);\n          break;\n\n        case 'email':\n          this.validateEmail(target.value);\n          break;\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      this.validateEmail(this.state.email).then(function (emailExists) {\n        if (this.validateName(this.state.name) && this.validatePassword(this.state.password) && this.validateConfPassword(this.state.password, this.state.confirmPassword) && !emailExists) {\n          var formData = new FormData();\n          formData.append('name', this.state.name);\n          formData.append('password', this.state.password);\n          formData.append('confirmPassword', this.state.confirmPassword);\n          formData.append('email', this.state.email);\n          HttpHelper.httpReq('http://localhost:3009/api/v1/sign-up', formData, 'POST').then(function (result) {\n            console.log(result);\n          }).catch(function (error) {\n            console.log(error);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        id: \"member-registration\",\n        onSubmit: this.handleSubmit,\n        className: \"form-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"jform_name-lbl\",\n        htmlFor: \"jform_name\",\n        className: \"hasPopover required\",\n        title: \"Name\",\n        \"data-content\": \"Enter your full name.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Name\", React.createElement(\"span\", {\n        className: \"star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"\\xA0*\"))), React.createElement(\"div\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"jform_name\",\n        className: \"required\",\n        size: \"30\",\n        required: true,\n        \"aria-required\": \"true\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), this.state.nameHelpText.state ? React.createElement(FormHelpText, {\n        type: this.state.nameHelpText.error,\n        text: this.state.nameHelpText.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }) : '')), React.createElement(\"div\", {\n        className: \"control-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"jform_password1-lbl\",\n        htmlFor: \"jform_password1\",\n        className: \"hasPopover required\",\n        title: \"Password\",\n        \"data-content\": \"Enter your desired password.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Password\", React.createElement(\"span\", {\n        className: \"star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"\\xA0*\"))), React.createElement(\"div\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"jform_password1\",\n        onChange: this.handleChange,\n        autoComplete: \"off\",\n        className: \"validate-password required\",\n        size: \"30\",\n        value: this.state.password,\n        required: true,\n        \"aria-required\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), this.state.passwordHelpText.state ? React.createElement(FormHelpText, {\n        type: this.state.passwordHelpText.error,\n        text: this.state.passwordHelpText.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }) : ''), React.createElement(\"div\", {\n        className: \"control-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"jform_password2-lbl\",\n        htmlFor: \"jform_password2\",\n        className: \"hasPopover required\",\n        title: \"Confirm Password\",\n        \"data-content\": \"Confirm your password.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Confirm Password\", React.createElement(\"span\", {\n        className: \"star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"\\xA0*\"))), React.createElement(\"div\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        onChange: this.handleChange,\n        id: \"jform_password2\",\n        autoComplete: \"off\",\n        className: \"validate-password required\",\n        size: \"30\",\n        value: this.state.password2,\n        required: true,\n        \"aria-required\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })), this.state.confirmPasswordHelpText.state ? React.createElement(FormHelpText, {\n        type: this.state.confirmPasswordHelpText.error,\n        text: this.state.confirmPasswordHelpText.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }) : ''), React.createElement(\"div\", {\n        className: \"control-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"jform_email1-lbl\",\n        htmlFor: \"jform_email1\",\n        className: \"hasPopover required\",\n        title: \"Email Address\",\n        \"data-content\": \"Enter your email address.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Email Address\", React.createElement(\"span\", {\n        className: \"star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"\\xA0*\"))), React.createElement(\"div\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        onChange: this.handleChange,\n        className: \"validate-email required\",\n        id: \"jform_email1\",\n        size: \"30\",\n        value: this.state.email,\n        autoComplete: \"email\",\n        required: true,\n        \"aria-required\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      })), this.state.emailHelpText.state ? React.createElement(FormHelpText, {\n        type: this.state.emailHelpText.error,\n        text: this.state.emailHelpText.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }) : '')), React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"jform_profile_tos-lbl\",\n        htmlFor: \"jform_profile_tos\",\n        className: \"hasPopover required\",\n        title: \"Terms of Service\",\n        \"data-content\": \"Please read the Terms of Service. You will not be able to register if you do not agree with them.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Terms of Service\", React.createElement(\"span\", {\n        className: \"star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"\\xA0*\"))), React.createElement(\"div\", {\n        className: \"controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        id: \"jform_profile_tos\",\n        className: \"radio\",\n        required: true,\n        \"aria-required\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        id: \"jform_profile_tos0\",\n        name: \"jform[profile][tos]\",\n        value: \"1\",\n        required: true,\n        \"aria-required\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), \" \", React.createElement(\"label\", {\n        htmlFor: \"jform_profile_tos0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Agree \"))))), React.createElement(\"div\", {\n        className: \"controls col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Don't have an account?\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mod-menu mod-menu__social\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"nav menu social\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"item-148\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"\",\n        href: \"#\",\n        title: \"Facebook\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../images/fb-button.png\",\n        alt: \"fb-button\",\n        height: \"500\",\n        width: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        className: \"item-149\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"\",\n        href: \"#\",\n        title: \"Google\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"../images/google_signin_buttons/web/2x/btn_google_signin_light_focus_web@2x.png\",\n        alt: \"g-button\",\n        height: \"200\",\n        width: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return SignUpFormComp;\n}(React.Component);\n\nexport default SignUpFormComp;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\easycow\\components\\signupForm.js"],"names":["React","HttpHelper","FormHelpText","SignUpFormComp","props","handleChange","bind","handleSubmit","state","name","emailHelpText","error","text","passwordHelpText","confirmPasswordHelpText","nameHelpText","TOSHelpText","input","trim","setState","password","test","confPassword","email","httpReq","then","result","status","catch","console","log","e","target","event","value","type","checked","validateName","validatePassword","validateConfPassword","confirmPassword","validateEmail","preventDefault","emailExists","formData","FormData","append","password2","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport HttpHelper from '../helpers/httpHelper';\r\nimport FormHelpText from '../components/FormHelpText';\r\n\r\n class  SignUpFormComp extends React.Component{\r\n   constructor(props){\r\n     super(props);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n      this.state = {\r\n        name:'',\r\n        emailHelpText :{\r\n          state:false,\r\n          error:false,\r\n          text:''\r\n        },\r\n        passwordHelpText:{\r\n          state:false,\r\n          error:false,\r\n          text:''\r\n        },\r\n        confirmPasswordHelpText:{\r\n          state:false,\r\n          error:false,\r\n          text:''\r\n        },\r\n        nameHelpText:{\r\n          state:false,\r\n          error:false,\r\n          text:''\r\n        },\r\n        TOSHelpText:{\r\n          state:false,\r\n          error:false,\r\n          text:''\r\n        }\r\n      }\r\n   }\r\n\r\n   helpFormText(){\r\n\r\n   }\r\n\r\n   validateName(input){\r\n     if (input.trim() === ''){\r\n       this.setState({nameHelpText:{\r\n           state:true,\r\n           error:true,\r\n           text:'Name is required'\r\n         }});\r\n       return false;\r\n     }else{\r\n       this.setState({nameHelpText:{\r\n           state:false,\r\n           error:false,\r\n           text:'Name is required'\r\n         }});\r\n       return true;\r\n     }\r\n   }\r\n\r\n   validatePassword(password){\r\n     if (!(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/.test(password))){\r\n       this.setState({passwordHelpText:{\r\n           state:true,\r\n           error:true,\r\n           text:'Password must be more than length of atleast 8  and contain a lower case , uppercase character and numerical character'\r\n         }});\r\n       return false\r\n     }else{\r\n       this.setState({\r\n         passwordHelpText:{\r\n           state:true,\r\n           error:false,\r\n           text:'Password OK'\r\n         }\r\n       })\r\n       return true;\r\n     }\r\n   }\r\n\r\n   validateConfPassword(confPassword,password){\r\n     if (password !== confPassword){\r\n       this.setState({\r\n         confirmPasswordHelpText:{\r\n           state:true,\r\n           error:true,\r\n           text:'Passwords do not match'\r\n         }\r\n       })\r\n       return false;\r\n     }else{\r\n       this.setState({\r\n         confirmPasswordHelpText:{\r\n           state:true,\r\n           error:false,\r\n           text:'Passwords matches'\r\n         }\r\n       });\r\n       return true;\r\n     }\r\n   }\r\n\r\n   validateEmail(email){\r\n\r\n     HttpHelper.httpReq('http://localhost:3009/api/v1/email/exists?email='+email,'','GET')\r\n       .then((result)=>{\r\n         if (result.status === true){\r\n           this.setState({\r\n             emailHelpText:{\r\n               state:true,\r\n               error:true,\r\n               text:'Email already exist'\r\n             }\r\n           });\r\n         }else{\r\n           this.setState({\r\n             emailHelpText:{\r\n               state:false,\r\n               error:false,\r\n               text:' '\r\n             }\r\n           });\r\n         }\r\n\r\n       }).catch((error)=>{console.log(error)});\r\n\r\n   }\r\n\r\n   handleChange(e){\r\n\r\n     const target = event.target;\r\n     const value = target.type === 'checkbox' ? target.checked : target.value;\r\n     const name = target.name;\r\n     this.setState({\r\n       [name]: value\r\n     });\r\n     switch (target.name) {\r\n       case 'name':\r\n          this.validateName(target.value);\r\n         break;\r\n       case 'password' :\r\n         this.validatePassword(target.value);\r\n         this.validateConfPassword(target.value,this.state.confirmPassword);\r\n\r\n         break;\r\n       case 'confirmPassword':\r\n          this.validateConfPassword(target.value,this.state.password);\r\n         break;\r\n       case 'email':\r\n         this.validateEmail(target.value);\r\n         break;\r\n     }\r\n\r\n   }\r\n\r\n   handleSubmit(e){\r\n     e.preventDefault();\r\n\r\n     this.validateEmail(this.state.email).then(function (emailExists) {\r\n\r\n       if (this.validateName(this.state.name) && this.validatePassword(this.state.password) && this.validateConfPassword(this.state.password,this.state.confirmPassword) && (!emailExists) ){\r\n\r\n         let formData = new FormData();\r\n         formData.append('name',this.state.name);\r\n         formData.append('password',this.state.password);\r\n         formData.append('confirmPassword',this.state.confirmPassword);\r\n         formData.append('email',this.state.email);\r\n\r\n\r\n         HttpHelper.httpReq('http://localhost:3009/api/v1/sign-up',formData,'POST')\r\n           .then((result)=>{\r\n             console.log(result)\r\n           }).catch((error)=>{console.log(error)});\r\n       }\r\n     })\r\n\r\n   }\r\n\r\n\r\n   render() {\r\n    return (\r\n\r\n      <form id=\"member-registration\" onSubmit={this.handleSubmit} className=\"form-horizontal\">\r\n        <fieldset>\r\n          <div className=\"control-group\">\r\n            <div className=\"control-label\">\r\n              <label id=\"jform_name-lbl\" htmlFor=\"jform_name\" className=\"hasPopover required\"\r\n                     title=\"Name\" data-content=\"Enter your full name.\">\r\n                Name<span className=\"star\">&#160;*</span></label>\r\n            </div>\r\n            <div className=\"controls\">\r\n              <input type=\"text\"  name=\"name\" id=\"jform_name\"  className=\"required\"\r\n                     size=\"30\" required aria-required=\"true\" value={this.state.name} onChange={this.handleChange} />\r\n\r\n                     {\r\n\r\n                       this.state.nameHelpText.state?<FormHelpText type={this.state.nameHelpText.error} text={this.state.nameHelpText.text} />:''\r\n                     }\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"control-group\">\r\n            <div className=\"control-label\">\r\n              <label id=\"jform_password1-lbl\" htmlFor=\"jform_password1\"\r\n                     className=\"hasPopover required\" title=\"Password\"\r\n                     data-content=\"Enter your desired password.\">\r\n                Password<span className=\"star\">&#160;*</span></label>\r\n            </div>\r\n            <div className=\"controls\">\r\n              <input type=\"password\" name=\"password\" id=\"jform_password1\" onChange={this.handleChange}\r\n                     autoComplete=\"off\" className=\"validate-password required\" size=\"30\"\r\n                     value={this.state.password} required aria-required=\"true\"/></div>\r\n            {\r\n\r\n              this.state.passwordHelpText.state?<FormHelpText type={this.state.passwordHelpText.error} text={this.state.passwordHelpText.text} />:''\r\n            }\r\n          </div>\r\n          <div className=\"control-group\">\r\n            <div className=\"control-label\">\r\n              <label id=\"jform_password2-lbl\" htmlFor=\"jform_password2\"\r\n                     className=\"hasPopover required\" title=\"Confirm Password\"\r\n                     data-content=\"Confirm your password.\">\r\n                Confirm Password<span className=\"star\">&#160;*</span></label>\r\n            </div>\r\n            <div className=\"controls\">\r\n              <input type=\"password\" name=\"confirmPassword\" onChange={this.handleChange} id=\"jform_password2\"\r\n                     autoComplete=\"off\" className=\"validate-password required\" size=\"30\"\r\n                     value={this.state.password2} required aria-required=\"true\"/></div>\r\n            {\r\n\r\n              this.state.confirmPasswordHelpText.state?<FormHelpText type={this.state.confirmPasswordHelpText.error} text={this.state.confirmPasswordHelpText.text} />:''\r\n            }\r\n          </div>\r\n          <div className=\"control-group\">\r\n            <div className=\"control-label\">\r\n              <label id=\"jform_email1-lbl\" htmlFor=\"jform_email1\" className=\"hasPopover required\"\r\n                     title=\"Email Address\" data-content=\"Enter your email address.\">\r\n                Email Address<span className=\"star\">&#160;*</span></label>\r\n            </div>\r\n            <div className=\"controls\">\r\n              <input type=\"email\" name=\"email\" onChange={this.handleChange} className=\"validate-email required\"\r\n                     id=\"jform_email1\"  size=\"30\" value={this.state.email} autoComplete=\"email\" required\r\n                     aria-required=\"true\"/></div>\r\n            {\r\n              this.state.emailHelpText.state?<FormHelpText type={this.state.emailHelpText.error} text={this.state.emailHelpText.text} />:''\r\n            }\r\n          </div>\r\n\r\n        </fieldset>\r\n        <fieldset>\r\n          <div className=\"control-group\">\r\n            <div className=\"control-label\">\r\n              <label id=\"jform_profile_tos-lbl\" htmlFor=\"jform_profile_tos\"\r\n                     className=\"hasPopover required\" title=\"Terms of Service\"\r\n                     data-content=\"Please read the Terms of Service. You will not be able to register if you do not agree with them.\">Terms\r\n                of Service<span className=\"star\">&#160;*</span></label></div>\r\n            <div className=\"controls\">\r\n              <fieldset id=\"jform_profile_tos\" className=\"radio\" required aria-required=\"true\">\r\n                <input type=\"radio\" id=\"jform_profile_tos0\" name=\"jform[profile][tos]\" value=\"1\"\r\n                       required aria-required=\"true\"/> <label htmlFor=\"jform_profile_tos0\">\r\n                Agree </label>\r\n\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n        <div className=\"controls col-sm-12\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n          <p>Don't have an account?<br /></p>\r\n          <div className=\"mod-menu mod-menu__social\">\r\n            <ul className=\"nav menu social\">\r\n              <li className=\"item-148\"><a className=\"\" href=\"#\" title=\"Facebook\"><img\r\n                src=\"../images/fb-button.png\" alt=\"fb-button\" height=\"500\" width=\"200\" /></a>\r\n              </li>\r\n              <li className=\"item-149\"><a className=\"\" href=\"#\" title=\"Google\"><img\r\n                src=\"../images/google_signin_buttons/web/2x/btn_google_signin_light_focus_web@2x.png\"\r\n                alt=\"g-button\" height=\"200\" width=\"200\" /></a>\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n    );\r\n   }\r\n }\r\n export  default SignUpFormComp;"]},"metadata":{},"sourceType":"module"}