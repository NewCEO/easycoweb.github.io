{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport httpHelper from '../helpers/httpHelper';\nimport HelpBlock from '../components/HelpBlock';\n\nvar bankDetailsForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(bankDetailsForm, _React$Component);\n\n  function bankDetailsForm(props) {\n    var _this;\n\n    _classCallCheck(this, bankDetailsForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(bankDetailsForm).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleInnerChanges = props.handleChanges;\n    _this.state = {\n      formValues: '',\n      notification: {\n        state: false,\n        error: false,\n        text: \"Update Successful\"\n      },\n      banksDom: []\n    };\n    return _this;\n  }\n\n  _createClass(bankDetailsForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBanks();\n    }\n  }, {\n    key: \"getBanks\",\n    value: function getBanks() {\n      var _this2 = this;\n\n      httpHelper.serverReq(\"http://localhost:3009/api/v1/banks\").then(function (response) {\n        if (response.success) {\n          var dom = response.success.data.map(function (bank) {\n            return React.createElement(\"option\", {\n              value: bank.id\n            }, bank.name);\n          });\n\n          _this2.setState({\n            banksDom: dom\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      var values;\n      this.state.formValues ? values = this.state.formValues : values = {};\n      values[name] = value;\n      this.setState({\n        formValues: values\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, this.state.notification.state ? React.createElement(HelpBlock, {\n        type: this.state.notification.error,\n        text: this.state.notification.text\n      }) : '', React.createElement(\"form\", {\n        id: \"rootwizard-2\",\n        method: \"post\",\n        onSubmit: this.handleSubmit,\n        className: \"form-wizard validate\"\n      }, React.createElement(\"div\", {\n        id: \"collapseOne-1\",\n        className: \"panel-collapse collapse\"\n      }, React.createElement(\"div\", {\n        className: \"panel-body\"\n      }, React.createElement(\"div\", {\n        className: \"tab-content\"\n      }, React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"name\"\n      }, \"Bank Name\"), React.createElement(\"select\", {\n        onChange: this.handleChange,\n        value: this.state.formValues.bank_name,\n        className: \"form-control\"\n      }, this.state.banksDom))), React.createElement(\"div\", {\n        className: \"col-md-6\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"address\"\n      }, \"Bank Account Name\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        onChange: this.handleChange,\n        value: this.state.formValues.address,\n        name: \"bank_acct_name\",\n        id: \"address_line_2\",\n        placeholder: \" Enter Bank Account Name\"\n      }))), React.createElement(\"div\", {\n        className: \"col-md-6\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"number\"\n      }, \"Bank Account Number\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        onChange: this.handleChange,\n        name: \"bank_acct_number\",\n        value: this.state.formValues.phone_number,\n        id: \"Phone No.\",\n        placeholder: \"Enter Bank Account Number\"\n      })))), React.createElement(\"div\", {\n        className: \"col-sm-4 form-group\"\n      }, React.createElement(\"button\", {\n        style: {\n          \"font-family\": \"dosis\"\n        },\n        type: \"submit\",\n        className: \"btn btn-primary\"\n      }, \"Save\")))))));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      this.setState({\n        btnDisabled: true\n      });\n      var values = this.state.formValues;\n      var formData = new FormData();\n\n      for (var key in values) {\n        formData.append(key, values[key]);\n      }\n\n      httpHelper.serverReq(\"http://localhost:3009/api/v1/user/update\", formData, 'Post').then(function (result) {\n        if (result.success) {\n          _this3.handleInnerChanges(_this3.state.formValues);\n\n          _this3.setState({\n            notification: {\n              state: true,\n              error: false,\n              text: \"Update Successful\"\n            }\n          });\n        } else {\n          _this3.setState({\n            notification: {\n              state: true,\n              error: true,\n              text: \"Update failed\"\n            }\n          });\n        }\n      });\n    }\n  }]);\n\n  return bankDetailsForm;\n}(React.Component);\n\nexport default bankDetailsForm;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\easycow\\components\\bankDetailsForm.js"],"names":["React","httpHelper","HelpBlock","bankDetailsForm","props","handleChange","bind","handleSubmit","handleInnerChanges","handleChanges","state","formValues","notification","error","text","banksDom","getBanks","serverReq","then","response","success","dom","data","map","bank","id","name","setState","event","target","value","type","checked","values","bank_name","address","phone_number","preventDefault","btnDisabled","formData","FormData","key","append","result","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport httpHelper from '../helpers/httpHelper';\r\nimport HelpBlock from '../components/HelpBlock';\r\n\r\n\r\nclass bankDetailsForm extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleInnerChanges = props.handleChanges;\r\n    this.state ={formValues:''\r\n      ,\r\n      notification:{\r\n        state:false,\r\n        error:false,\r\n        text:`Update Successful`\r\n      },\r\n      banksDom:[]\r\n    };\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBanks();\r\n  }\r\n\r\n  getBanks(){\r\n    httpHelper.serverReq(\"http://localhost:3009/api/v1/banks\").then( (response)=> {\r\n      if (response.success){\r\n       let dom = response.success.data.map(function (bank) {\r\n         return <option value={bank.id}>{bank.name}</option>\r\n       })\r\n        this.setState({banksDom:dom})\r\n      }\r\n    })\r\n  }\r\n  handleChange(event){\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    let values;\r\n    this.state.formValues?values = this.state.formValues:values={};\r\n    values[name] = value;\r\n    this.setState({\r\n      formValues: values\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        {          this.state.notification.state?<HelpBlock type={this.state.notification.error} text={this.state.notification.text} />:''}\r\n        <form id=\"rootwizard-2\" method=\"post\" onSubmit={this.handleSubmit} className=\"form-wizard validate\">\r\n\r\n          <div id=\"collapseOne-1\" className=\"panel-collapse collapse\">\r\n            <div className=\"panel-body\">\r\n              <div className=\"tab-content\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"control-label\" htmlFor=\"name\">Bank Name</label>\r\n                      <select onChange={this.handleChange} value={this.state.formValues.bank_name} className=\"form-control\">\r\n                        {this.state.banksDom}\r\n                      </select>\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"control-label\" htmlFor=\"address\">Bank Account Name</label>\r\n                      <input className=\"form-control\" onChange={this.handleChange} value={this.state.formValues.address} name=\"bank_acct_name\" id=\"address_line_2\"\r\n                             placeholder=\" Enter Bank Account Name\"/>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label className=\"control-label\" htmlFor=\"number\">Bank Account Number</label>\r\n                      <input className=\"form-control\" onChange={this.handleChange} name=\"bank_acct_number\" value={this.state.formValues.phone_number} id=\"Phone No.\" placeholder=\"Enter Bank Account Number\"/>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  {/*<div className=\"col-md-6\">*/}\r\n                  {/*<div className=\"form-group\">*/}\r\n                  {/*<label className=\"control-label\">Old Password</label>*/}\r\n\r\n                  {/*<div className=\"input-group\">*/}\r\n                  {/*<div className=\"input-group-addon\">*/}\r\n                  {/*<i className=\"entypo-key\"></i>*/}\r\n                  {/*</div>*/}\r\n\r\n                  {/*<input type=\"password\" className=\"form-control\" name=\"password\" id=\"password\"*/}\r\n                  {/*data-validate=\"required\" placeholder=\"Enter strong password\"/>*/}\r\n                  {/*</div>*/}\r\n                  {/*</div>*/}\r\n                  {/*</div>*/}\r\n\r\n                  {/*<div className=\"col-md-6\">*/}\r\n                  {/*<div className=\"form-group\">*/}\r\n                  {/*<label className=\"control-label\">New Password</label>*/}\r\n\r\n                  {/*<div className=\"input-group\">*/}\r\n                  {/*<div className=\"input-group-addon\">*/}\r\n                  {/*<i className=\"entypo-cw\"></i>*/}\r\n                  {/*</div>*/}\r\n\r\n                  {/*<input type=\"password\" className=\"form-control\" name=\"password\" id=\"password\"*/}\r\n                  {/*data-validate=\"required,equalTo[#password]\"*/}\r\n                  {/*data-message-equal-to=\"Passwords doesn't match.\" placeholder=\"Confirm password\"/>*/}\r\n                  {/*</div>*/}\r\n                  {/*</div>*/}\r\n                  {/*</div>*/}\r\n                </div>\r\n                <div className=\"col-sm-4 form-group\">\r\n                  <button style={{\"font-family\": \"dosis\"}} type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  handleSubmit(event){\r\n    event.preventDefault();\r\n    this.setState({btnDisabled:true});\r\n    let values = this.state.formValues;\r\n    let formData = new FormData();\r\n\r\n    for (var key in values){\r\n      formData.append(key,values[key])\r\n    }\r\n\r\n    httpHelper.serverReq(\"http://localhost:3009/api/v1/user/update\",formData,'Post').then( (result)=> {\r\n      if (result.success){\r\n        this.handleInnerChanges(this.state.formValues);\r\n        this.setState({ notification:{\r\n            state:true,\r\n            error:false,\r\n            text:`Update Successful`\r\n          }});\r\n      }else {\r\n        this.setState({ notification:{\r\n            state:true,\r\n            error:true,\r\n            text:`Update failed`\r\n          }});\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default bankDetailsForm;\r\n"]},"metadata":{},"sourceType":"module"}