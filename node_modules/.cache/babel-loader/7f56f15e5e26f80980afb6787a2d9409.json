{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport httpHelper from '../helpers/httpHelper';\nimport HelpBlock from '../components/HelpBlock';\n\nvar createFarmActivityComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(createFarmActivityComponent, _React$Component);\n\n  function createFarmActivityComponent(props) {\n    var _this;\n\n    _classCallCheck(this, createFarmActivityComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(createFarmActivityComponent).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleFileUpload = _this.handleFileUpload.bind(_assertThisInitialized(_this));\n    _this.fileInput = React.createRef();\n    _this.form = React.createRef();\n    _this.editFarmId = props.farmId;\n    _this.state = {\n      location: ''\n    };\n    _this.state = {\n      formValues: {\n        status: '1'\n      },\n      farmNotification: {\n        state: false,\n        error: false,\n        text: ''\n      },\n      thumbnailCount: 1\n    };\n    return _this;\n  }\n\n  _createClass(createFarmActivityComponent, [{\n    key: \"manageImageThumbnail\",\n    value: function manageImageThumbnail() {}\n  }, {\n    key: \"handleImageAdd\",\n    value: function handleImageAdd() {\n      var node = React.createElement(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        multiple: \"multiple\",\n        ref: this.fileInput,\n        onChange: this.handleFileUpload,\n        name: \"thumbNail[\".concat(this.state.thumbnailCount, \"]\"),\n        id: \"field-file\",\n        placeholder: \"Placeholder\"\n      });\n      var prevNode = this.state.imageThumbnails || [];\n      return prevNode.push(node);\n    }\n  }, {\n    key: \"addThumbnailButton\",\n    value: function addThumbnailButton() {\n      this.handleImageAdd();\n      this.setState({\n        imageThumbnails: this.handleImageAdd(),\n        thumbnailCount: this.state.thumbnailCount++\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getLocations();\n      this.getCategories();\n\n      if (this.editFarmId) {\n        httpHelper.serverReq('http://localhost:3009/api/v1/farms/' + this.editFarmId).then(function (data) {\n          if (data.success) {\n            var formValues = {};\n\n            for (var key in data.success.data) {\n              if (key === \"funding_starts\" || key === \"funding_ends\" || key === \"farm_starts\" || key === \"farm_ends\") {\n                var date = new Date(data.success.data[key]);\n                formValues[key] = \"\".concat(date.getFullYear().toString(), \"-\").concat(date.getMonth() < 11 ? \"0\" + date.getMonth().toString() : date.getMonth().toString(), \"-\").concat(date.getDate() < 11 ? \"0\" + date.getDate().toString() : date.getDate().toString());\n                console.log(formValues[key], 'date');\n              } else {\n                formValues[key] = data.success.data[key];\n              }\n            }\n\n            _this2.setState({\n              formValues: formValues\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      var values;\n      this.state.formValues ? values = this.state.formValues : values = {};\n      values[name] = value;\n      this.setState({\n        formValues: values\n      });\n    }\n  }, {\n    key: \"getLocations\",\n    value: function getLocations() {\n      var _this3 = this;\n\n      var htmlLocations = [];\n      httpHelper.serverReq('http://localhost:3009/api/v1/locations').then(function (locations) {\n        locations.success.data.forEach(function (location) {\n          htmlLocations.push(React.createElement(\"option\", {\n            value: location.id\n          }, location.name));\n        });\n\n        _this3.setState({\n          location: htmlLocations\n        });\n      });\n    }\n  }, {\n    key: \"getCategories\",\n    value: function getCategories() {\n      var _this4 = this;\n\n      var htmlCategories = [];\n      httpHelper.serverReq('http://localhost:3009/api/v1/farms/categories').then(function (categories) {\n        categories.success.data.forEach(function (category) {\n          htmlCategories.push(React.createElement(\"option\", {\n            value: category.id\n          }, category.name));\n        });\n\n        _this4.setState({\n          categories: htmlCategories\n        });\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this5 = this;\n\n      event.preventDefault();\n      this.setState({\n        btnDisabled: true\n      });\n      var values = this.state.formValues;\n      var formData = new FormData();\n\n      for (var key in values) {\n        formData.append(key, values[key]);\n      }\n\n      this.setState({\n        btnDisabled: false\n      });\n      var url;\n      httpHelper.serverReq(url, formData, 'Post').then(function (result) {\n        if (result.success) {\n          var temp = {};\n\n          if (!_this5.props.farmId) {\n            for (var key in values) {\n              temp[key] = \"\";\n            }\n\n            _this5.setState({\n              formValues: temp\n            });\n          }\n\n          _this5.setState({\n            farmNotification: {\n              state: true,\n              error: false,\n              text: \"Activity added successfully\"\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleFileUpload\",\n    value: function handleFileUpload() {\n      var file = this.fileInput.current.files[0];\n      var name = this.fileInput.current.name;\n      var values;\n      var images = this.state.images || {};\n      images[name] = file;\n      var formValuesImages = [];\n      images.forEach(function (image) {\n        formValuesImages.push(images);\n      });\n      this.state.formValues ? values = this.state.formValues : values = {};\n      values[\"images\"] = formValuesImages;\n      this.setState({\n        formValues: values\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        role: \"form\",\n        id: \"farmForm\",\n        ref: this.form,\n        onSubmit: this.handleSubmit,\n        className: \"form-horizontal  form-groups-bordered\"\n      }, this.state.farmNotification.state ? React.createElement(HelpBlock, {\n        type: this.state.farmNotification.error,\n        text: this.state.farmNotification.text\n      }) : '', React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        htmlFor: \"field-1\",\n        className: \"col-sm-3 control-label\"\n      }, \"Information\"), React.createElement(\"div\", {\n        className: \"col-sm-5\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: this.state.formValues.title,\n        required: \"required\",\n        onChange: this.handleChange,\n        className: \"form-control\",\n        id: \"field-1\",\n        placeholder: \"Farm Title\"\n      }))), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        htmlFor: \"field-1\",\n        className: \"col-sm-3 control-label\"\n      }, \"Summary\"), React.createElement(\"div\", {\n        className: \"col-sm-5\"\n      }, React.createElement(\"textarea\", {\n        type: \"text\",\n        name: \"description\",\n        value: this.state.formValues.description,\n        required: \"required\",\n        onChange: this.handleChange,\n        className: \"form-control\",\n        id: \"field-1\",\n        placeholder: \"Farm Title\"\n      }))), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        htmlFor: \"field-1\",\n        className: \"col-sm-3 control-label\"\n      }, \"Activity\"), React.createElement(\"div\", {\n        className: \"col-sm-5\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        value: this.state.formValues.description,\n        required: \"required\",\n        onChange: this.handleChange,\n        className: \"form-control\",\n        id: \"field-1\",\n        placeholder: \"Farm Title\"\n      }))), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 control-label\"\n      }, \"Week\"), React.createElement(\"div\", {\n        className: \"col-sm-5\"\n      }, React.createElement(\"div\", {\n        className: \"input-group\"\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        value: this.state.formValues.price_per_unit,\n        onChange: this.handleChange,\n        required: \"required\",\n        name: \"price_per_unit\",\n        className: \"form-control\"\n      })))), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 control-label\"\n      }, \"Stage\"), React.createElement(\"div\", {\n        className: \"col-sm-5\"\n      }, React.createElement(\"div\", {\n        className: \"input-group\"\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        value: this.state.formValues.price_per_unit,\n        onChange: this.handleChange,\n        required: \"required\",\n        name: \"price_per_unit\",\n        className: \"form-control\"\n      })))), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        htmlFor: \"field-1\",\n        className: \"col-sm-3 control-label\"\n      }, \"Activity Images\"), React.createElement(\"div\", {\n        className: \"col-sm-5\"\n      }, this.state.imageThumbnails)));\n    }\n  }]);\n\n  return createFarmActivityComponent;\n}(React.Component);\n\nexport default createFarmActivityComponent;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\easycow\\components\\createActivity.js"],"names":["React","httpHelper","HelpBlock","createFarmActivityComponent","props","handleChange","bind","handleSubmit","handleFileUpload","fileInput","createRef","form","editFarmId","farmId","state","location","formValues","status","farmNotification","error","text","thumbnailCount","node","prevNode","imageThumbnails","push","handleImageAdd","setState","getLocations","getCategories","serverReq","then","data","success","key","date","Date","getFullYear","toString","getMonth","getDate","console","log","event","target","value","type","checked","name","values","htmlLocations","locations","forEach","id","htmlCategories","categories","category","preventDefault","btnDisabled","formData","FormData","append","url","result","temp","file","current","files","images","formValuesImages","image","title","description","price_per_unit","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport httpHelper from '../helpers/httpHelper';\r\nimport HelpBlock from '../components/HelpBlock';\r\n\r\n\r\nclass createFarmActivityComponent extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleFileUpload = this.handleFileUpload.bind(this);\r\n    this.fileInput = React.createRef();\r\n    this.form      = React.createRef();\r\n\r\n    this.editFarmId = props.farmId;\r\n    this.state ={location:''\r\n    };\r\n\r\n    this.state = {formValues:{status:'1'},\r\n      farmNotification:{\r\n        state:false,\r\n        error:false,\r\n        text:''\r\n      },\r\n      thumbnailCount:1\r\n    }\r\n\r\n  }\r\n\r\n  manageImageThumbnail(){\r\n\r\n  }\r\n\r\n  handleImageAdd(){\r\n    let node = <input type=\"file\" className=\"form-control\" multiple=\"multiple\" ref={this.fileInput} onChange={this.handleFileUpload} name={`thumbNail[${this.state.thumbnailCount}]`} id=\"field-file\" placeholder=\"Placeholder\" />;\r\n    let prevNode  = this.state.imageThumbnails||[];\r\n     return prevNode.push(node);\r\n  }\r\n\r\n  addThumbnailButton(){\r\n    this.handleImageAdd();\r\n    this.setState({imageThumbnails:this.handleImageAdd(),thumbnailCount:this.state.thumbnailCount++});\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLocations();\r\n    this.getCategories();\r\n    if (this.editFarmId){\r\n      httpHelper.serverReq('http://localhost:3009/api/v1/farms/'+this.editFarmId).then( (data)=>{\r\n        if (data.success){\r\n          let formValues = {};\r\n          for (var key in data.success.data){\r\n            if (key === \"funding_starts\" || key === \"funding_ends\" || key === \"farm_starts\" || key === \"farm_ends\"){\r\n              let date = new Date(data.success.data[key]);\r\n              formValues[key] = `${date.getFullYear().toString()}-${date.getMonth()<11?\"0\"+date.getMonth().toString():date.getMonth().toString()}-${date.getDate() < 11?\"0\"+date.getDate().toString():date.getDate().toString()}`\r\n\r\n              console.log(formValues[key],'date')\r\n            }else{\r\n              formValues[key] = data.success.data[key];\r\n            }\r\n          }\r\n          this.setState( {formValues:formValues})\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange(event){\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    let values;\r\n    this.state.formValues?values = this.state.formValues:values={};\r\n    values[name] = value;\r\n    this.setState({\r\n      formValues: values\r\n    });\r\n  }\r\n\r\n  getLocations(){\r\n    let htmlLocations = [];\r\n    httpHelper.serverReq('http://localhost:3009/api/v1/locations').then( (locations)=> {\r\n      locations.success.data.forEach((location)=>{\r\n        htmlLocations.push( <option value={location.id} >{location.name}</option>);\r\n      });\r\n      this.setState({location: htmlLocations});\r\n    })\r\n  }\r\n\r\n  getCategories(){\r\n    let htmlCategories = [];\r\n    httpHelper.serverReq('http://localhost:3009/api/v1/farms/categories').then( (categories)=> {\r\n      categories.success.data.forEach((category)=>{\r\n        htmlCategories.push( <option value={category.id} >{category.name}</option>);\r\n      });\r\n      this.setState({categories: htmlCategories});\r\n    })\r\n  }\r\n\r\n  handleSubmit(event){\r\n    event.preventDefault();\r\n    this.setState({btnDisabled:true});\r\n    let values = this.state.formValues;\r\n    let formData = new FormData();\r\n    for (var key in values){\r\n      formData.append(key,values[key])\r\n    }\r\n    this.setState({btnDisabled:false});\r\n\r\n    let url;\r\n\r\n    httpHelper.serverReq(url,formData,'Post').then( (result)=> {\r\n      if (result.success){\r\n        let temp = {};\r\n        if (!this.props.farmId){\r\n\r\n          for (var key in values){\r\n            temp[key] = \"\"\r\n          }\r\n          this.setState({formValues:temp})\r\n        }\r\n\r\n        this.setState({ farmNotification:{\r\n            state:true,\r\n            error:false,\r\n            text:`Activity added successfully`\r\n          }});\r\n      }\r\n    })\r\n  }\r\n\r\n  handleFileUpload() {\r\n    let file = this.fileInput.current.files[0];\r\n    let name = this.fileInput.current.name;\r\n    let values;\r\n    let images = this.state.images||{};\r\n    images[name] = file;\r\n    let formValuesImages = [];\r\n    images.forEach(function (image) {\r\n      formValuesImages.push(images)\r\n    });\r\n    this.state.formValues?values = this.state.formValues:values={};\r\n    values[\"images\"] = formValuesImages;\r\n    this.setState({\r\n      formValues: values\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <form role=\"form\" id=\"farmForm\" ref={this.form} onSubmit={this.handleSubmit} className=\"form-horizontal  form-groups-bordered\">\r\n        {\r\n\r\n          this.state.farmNotification.state?<HelpBlock type={this.state.farmNotification.error} text={this.state.farmNotification.text} />:''\r\n        }\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"field-1\" className=\"col-sm-3 control-label\">Information</label>\r\n\r\n          <div className=\"col-sm-5\">\r\n            <input type=\"text\" name=\"title\" value={this.state.formValues.title} required=\"required\" onChange={this.handleChange} className=\"form-control\" id=\"field-1\" placeholder=\"Farm Title\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"field-1\" className=\"col-sm-3 control-label\">Summary</label>\r\n\r\n          <div className=\"col-sm-5\">\r\n            <textarea type=\"text\" name=\"description\" value={this.state.formValues.description} required=\"required\" onChange={this.handleChange} className=\"form-control\" id=\"field-1\" placeholder=\"Farm Title\" ></textarea>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"field-1\" className=\"col-sm-3 control-label\">Activity</label>\r\n\r\n          <div className=\"col-sm-5\">\r\n            <input type=\"text\" name=\"description\" value={this.state.formValues.description} required=\"required\" onChange={this.handleChange} className=\"form-control\" id=\"field-1\" placeholder=\"Farm Title\" ></input>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"col-sm-3 control-label\">Week</label>\r\n\r\n          <div className=\"col-sm-5\">\r\n            <div className=\"input-group\">\r\n              <input type=\"number\" min=\"0\" value={this.state.formValues.price_per_unit}  onChange={this.handleChange} required=\"required\" name=\"price_per_unit\" className=\"form-control\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"col-sm-3 control-label\">Stage</label>\r\n\r\n          <div className=\"col-sm-5\">\r\n            <div className=\"input-group\">\r\n              <input type=\"number\" min=\"0\" value={this.state.formValues.price_per_unit}  onChange={this.handleChange} required=\"required\" name=\"price_per_unit\" className=\"form-control\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"field-1\" className=\"col-sm-3 control-label\">Activity Images</label>\r\n\r\n          <div className=\"col-sm-5\">\r\n            {this.state.imageThumbnails}\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default createFarmActivityComponent;\r\n"]},"metadata":{},"sourceType":"module"}