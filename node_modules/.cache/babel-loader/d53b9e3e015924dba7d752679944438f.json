{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport httpHelper from '../helpers/httpHelper';\nimport HelpBlock from '../components/HelpBlock';\n\nvar createFarmFormComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(createFarmFormComponent, _React$Component);\n\n  function createFarmFormComponent(props) {\n    var _this;\n\n    _classCallCheck(this, createFarmFormComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(createFarmFormComponent).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.fileInput = React.createRef();\n    _this.form = React.createRef();\n    _this.editFarmId = props.farmId;\n    _this.state = {\n      location: ''\n    };\n    _this.state = {\n      formValues: {\n        status: '1'\n      },\n      farmNotification: {\n        state: false,\n        error: false,\n        text: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(createFarmFormComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getLocations();\n      this.getCategories();\n\n      if (this.editFarmId) {\n        httpHelper.serverReq('http://localhost:3009/api/v1/farms/' + this.editFarmId).then(function (data) {\n          if (data.success) {\n            var formValues = {};\n\n            for (var key in data.success.data) {\n              if (key === \"funding_starts\" || key === \"funding_ends\" || key === \"farm_starts\" || key === \"farm_ends\") {\n                var date = new Date(data.success.data[key]);\n                formValues[key] = \"\".concat(date.getFullYear().toString(), \"-\").concat(date.getMonth() < 11 ? \"0\" + date.getMonth().toString() : date.getMonth().toString(), \"-\").concat(date.getDate() < 11 ? \"0\" + date.getDate().toString() : date.getDate().toString());\n                console.log(formValues[key], 'date');\n              } else {\n                formValues[key] = data.success.data[key];\n              }\n            }\n\n            _this2.setState({\n              formValues: formValues\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      var values;\n      this.state.formValues ? values = this.state.formValues : values = {};\n      values[name] = value;\n      this.setState({\n        formValues: values\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      this.setState({\n        btnDisabled: true\n      });\n      var values = this.state.formValues;\n      var formData = new FormData();\n\n      for (var key in values) {\n        formData.append(key, values[key]);\n      }\n\n      httpHelper.serverReq(\"http://localhost:3009/api/v1/user/update\", formData, 'Post').then(function (result) {\n        if (result.success) {\n          console.log(\"success\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        id: \"rootwizard-2\",\n        method: \"post\",\n        onSubmit: this.handleSubmit,\n        className: \"form-wizard validate\"\n      }, React.createElement(\"div\", {\n        id: \"collapseOne-2\",\n        className: \"panel-collapse collapse\"\n      }, React.createElement(\"div\", {\n        className: \"panel-body\"\n      }, React.createElement(\"div\", {\n        className: \"tab-content\"\n      }, React.createElement(\"div\", {\n        className: \"row\"\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"name\"\n      }, \"Full Name\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        name: \"full_name\",\n        id: \"full_name\",\n        \"data-validate\": \"required\",\n        placeholder: \"Your full name\"\n      }))), React.createElement(\"div\", {\n        className: \"col-md-6\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"address\"\n      }, \"Address\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        name: \"address_line_2\",\n        id: \"address_line_2\",\n        placeholder: \"(Optional) Address\"\n      }))), React.createElement(\"div\", {\n        className: \"col-md-6\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        htmlFor: \"number\"\n      }, \"Phone No.\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        name: \"phone_number\",\n        id: \"Phone No.\",\n        placeholder: \"Phone No.\"\n      })))), React.createElement(\"div\", {\n        className: \"col-sm-4 form-group\"\n      }, React.createElement(\"button\", {\n        style: {\n          \"font-family\": \"dosis\"\n        },\n        type: \"submit\",\n        className: \"btn btn-primary\"\n      }, \"Save\"))))));\n    }\n  }]);\n\n  return createFarmFormComponent;\n}(React.Component);\n\nexport default createFarmFormComponent;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\easycow\\components\\personalDetailsForm.js"],"names":["React","httpHelper","HelpBlock","createFarmFormComponent","props","handleChange","bind","handleSubmit","fileInput","createRef","form","editFarmId","farmId","state","location","formValues","status","farmNotification","error","text","getLocations","getCategories","serverReq","then","data","success","key","date","Date","getFullYear","toString","getMonth","getDate","console","log","setState","event","target","value","type","checked","name","values","preventDefault","btnDisabled","formData","FormData","append","result","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport httpHelper from '../helpers/httpHelper';\r\nimport HelpBlock from '../components/HelpBlock';\r\n\r\n\r\nclass createFarmFormComponent extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.fileInput = React.createRef();\r\n    this.form      = React.createRef();\r\n\r\n    this.editFarmId = props.farmId;\r\n    this.state ={location:''\r\n    };\r\n\r\n    this.state = {formValues:{status:'1'},\r\n      farmNotification:{\r\n        state:false,\r\n        error:false,\r\n        text:''\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLocations();\r\n    this.getCategories();\r\n    if (this.editFarmId){\r\n      httpHelper.serverReq('http://localhost:3009/api/v1/farms/'+this.editFarmId).then( (data)=>{\r\n        if (data.success){\r\n          let formValues = {};\r\n          for (var key in data.success.data){\r\n            if (key === \"funding_starts\" || key === \"funding_ends\" || key === \"farm_starts\" || key === \"farm_ends\"){\r\n              let date = new Date(data.success.data[key]);\r\n              formValues[key] = `${date.getFullYear().toString()}-${date.getMonth()<11?\"0\"+date.getMonth().toString():date.getMonth().toString()}-${date.getDate() < 11?\"0\"+date.getDate().toString():date.getDate().toString()}`\r\n\r\n              console.log(formValues[key],'date')\r\n            }else{\r\n              formValues[key] = data.success.data[key];\r\n            }\r\n          }\r\n          this.setState( {formValues:formValues})\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange(event){\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    let values;\r\n    this.state.formValues?values = this.state.formValues:values={};\r\n    values[name] = value;\r\n    this.setState({\r\n      formValues: values\r\n    });\r\n  }\r\n\r\n\r\n  handleSubmit(event){\r\n    event.preventDefault();\r\n    this.setState({btnDisabled:true});\r\n    let values = this.state.formValues;\r\n    let formData = new FormData();\r\n\r\n    for (var key in values){\r\n      formData.append(key,values[key])\r\n    }\r\n\r\n    httpHelper.serverReq(\"http://localhost:3009/api/v1/user/update\",formData,'Post').then( (result)=> {\r\n      if (result.success){\r\n        console.log(\"success\")\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n\r\n      <form id=\"rootwizard-2\" method=\"post\" onSubmit={this.handleSubmit} className=\"form-wizard validate\">\r\n        <div id=\"collapseOne-2\" className=\"panel-collapse collapse\">\r\n          <div className=\"panel-body\">\r\n            <div className=\"tab-content\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"name\">Full Name</label>\r\n                    <input className=\"form-control\" name=\"full_name\" id=\"full_name\" data-validate=\"required\"\r\n                           placeholder=\"Your full name\"/>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"address\">Address</label>\r\n                    <input className=\"form-control\" name=\"address_line_2\" id=\"address_line_2\"\r\n                           placeholder=\"(Optional) Address\"/>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"number\">Phone No.</label>\r\n                    <input className=\"form-control\" name=\"phone_number\" id=\"Phone No.\" placeholder=\"Phone No.\"/>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                {/*<div className=\"col-md-6\">*/}\r\n                {/*<div className=\"form-group\">*/}\r\n                {/*<label className=\"control-label\">Old Password</label>*/}\r\n\r\n                {/*<div className=\"input-group\">*/}\r\n                {/*<div className=\"input-group-addon\">*/}\r\n                {/*<i className=\"entypo-key\"></i>*/}\r\n                {/*</div>*/}\r\n\r\n                {/*<input type=\"password\" className=\"form-control\" name=\"password\" id=\"password\"*/}\r\n                {/*data-validate=\"required\" placeholder=\"Enter strong password\"/>*/}\r\n                {/*</div>*/}\r\n                {/*</div>*/}\r\n                {/*</div>*/}\r\n\r\n                {/*<div className=\"col-md-6\">*/}\r\n                {/*<div className=\"form-group\">*/}\r\n                {/*<label className=\"control-label\">New Password</label>*/}\r\n\r\n                {/*<div className=\"input-group\">*/}\r\n                {/*<div className=\"input-group-addon\">*/}\r\n                {/*<i className=\"entypo-cw\"></i>*/}\r\n                {/*</div>*/}\r\n\r\n                {/*<input type=\"password\" className=\"form-control\" name=\"password\" id=\"password\"*/}\r\n                {/*data-validate=\"required,equalTo[#password]\"*/}\r\n                {/*data-message-equal-to=\"Passwords doesn't match.\" placeholder=\"Confirm password\"/>*/}\r\n                {/*</div>*/}\r\n                {/*</div>*/}\r\n                {/*</div>*/}\r\n              </div>\r\n              <div className=\"col-sm-4 form-group\">\r\n                <button style={{\"font-family\": \"dosis\"}} type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default createFarmFormComponent;\r\n"]},"metadata":{},"sourceType":"module"}